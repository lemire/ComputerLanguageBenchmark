/* The Computer Language Benchmarks Game
   http://shootout.alioth.debian.org/
   contributed by Yauheni Akhotnikau
*/

enum Color { BLUE, RED, YELLOW, FADED }

class MeetingPlace
  {
    int remaining;
    ?Creature first = null;

    void meet( Creature me )
      {
        synchronized( this )
          {
            if( remaining > 0 )
              {
                if( first == null )
                  {
                    first = me;
                    this.wait();
                  }
                else
                  {
                    let Creature f = notNull(first);
                    me.other = f.selfColor;
                    f.other = me.selfColor;

                    first = null;
                    --remaining;

                    this.notify();
                  }
              }
            else
              {
                me.other = FADED;
              }
          }
      }
  }

class Creature extends Thread
  {
    Color selfColor = FADED;
    Color other = FADED;
    MeetingPlace meetingPlace;
    int creaturesMeet = 0;

    run()
      {
        while( selfColor != FADED )
          {
            meetingPlace.meet( this );
            selfColor = this.complement();
            if( FADED != selfColor )
              ++creaturesMeet;
          }
      }

    Color complement()
      {
        if( FADED == other )
          return FADED;
        else if( BLUE == selfColor )
          return other == RED ? YELLOW : RED;
        else if( RED == selfColor )
          return other == BLUE ? YELLOW : BLUE;
        else if( YELLOW == selfColor )
          return other == BLUE ? RED : BLUE;

        return selfColor;
      }
  }

new Creature( Color color, MeetingPlace place )
  {
    this( selfColor: color, meetingPlace: place );
  }

void
main( String[] args )
  {
    var int remaining = 1 == args.length ? Integer.parseInt( args[0] ) : 10;

    let meetingPlace = new MeetingPlace( remaining: remaining );

    var creatures = new LinkedList();
    for( Color c : [ BLUE, YELLOW, RED, BLUE ] )
      creatures.add( new Creature( c, meetingPlace ) );

    for( creature : creatures )
      creature.start();

    var total = 0;
    for( creature : creatures )
      {
        creature.join();
        total += creature.creaturesMeet;
      }

    println( total );
  }

// vim:ts=2:sts=2:sw=2:expandtab:


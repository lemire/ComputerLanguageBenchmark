\ The Great Computer Language Shootout
\  http://shootout.alioth.debian.org
\
\  Contributed by Ian Osgood

\ read NUM from last command line argument
0. argc @ 1- arg >number 2drop drop value NUM

require tasker.fs

\ 0 is none
1 constant red
2 constant yellow
3 constant blue

variable first
variable second
variable meetings

: meet ( me -- other )
  begin pause second @ 0= until
  first @
  if   second ! first @ first off
  else NUM dup 0= if nip exit then 1- to NUM
       first !
       begin pause second @ until
       second @ second off
  then ;

create complement
\ none   red   yellow     blue
  0 ,      0 ,      0 ,      0 ,  \ none
  0 ,    red ,   blue , yellow ,  \ red
  0 ,   blue , yellow ,    red ,  \ yellow
  0 , yellow ,    red ,   blue ,  \ blue
does> ( c1 c2 -- c3 ) >r 4 * + cells r> + @ ;

: creature ( color -- )
  64 NewTask 1 swap pass
  ( task:  color -- )
  0 swap ( #met color )
  begin  dup meet ?dup
  while  complement swap  1+ swap
  repeat
  drop  meetings +! ;

: main
  blue yellow red blue  4 0 do creature loop
  begin pause single-tasking? until ;

main  meetings @ 1 u.r cr  bye  \ done!

/* The Computer Language Shootout
   http://shootout.alioth.debian.org/

   contributed by Alp Toker
*/

using System;
using Thread = System.Collections.IEnumerator;

class Chameneos
{
   static Color other, first, second;
   static int n, meetings;

   static Thread Creature (Color me)
   {
      int met = 0;

      while (true) {
         //wait until meeting place clears
         while (second != Color.Faded)
            yield return null;

         other = first;

         if (other != Color.Faded)
            second = me;
         else {
            if (n <= 0) {
               meetings += met;
               yield return null;

               //all faded
               yield break;
            }

            n--;
            first = me;

            //wait for another creature
            while (second == Color.Faded)
               yield return null;

            other = second;

            first = Color.Faded;
            second = Color.Faded;
            yield return null;
         }

         //perform meeting
         met++;
         if (me != other)
            me = Complement (me);
      }
   }

   static Color Complement (Color me)
   {
      switch (me)
      {
         case Color.Blue:
            return other == Color.Red ? Color.Yellow : Color.Red;
         case Color.Red:
            return other == Color.Blue ? Color.Yellow : Color.Blue;
         case Color.Yellow:
            return other == Color.Blue ? Color.Red : Color.Blue;
         default: return me;
      }
   }

   static int Schedule (Thread[] threads)
   {
      while (true)
         foreach (Thread thread in threads)
            if (!thread.MoveNext ())
               return meetings;
   }

   enum Color { Faded, Blue, Red, Yellow }

   static void Main (string[] args)
   {
      n = Int32.Parse (args[0]);

      Thread[] threads = new Thread[] {Creature (Color.Blue), Creature (Color.Red), Creature (Color.Yellow), Creature (Color.Blue)};

      Console.WriteLine (Schedule (threads));
   }
}

(* The Computer Language Benchmarks Game
   http://shootout.alioth.debian.org/
   contributed by Isaac Gouy
*)

module threadring;

import
   System.Console as C,
   BenchmarksGame;

protocol TokenProtocol = (token = integer);

activity NamedThread(name : integer) implements TokenProtocol;
var 
   token : integer;
begin     
   loop 
      accept token;
      if token > 0 then
         NextThreadTake(name, token-1);
      else
         if token = 0 then C.WriteLine("{0}", name); end;
         NextThreadTake(name, -1);
         exit;
      end;
   end;
end NamedThread;


procedure NextThreadTake(name, token : integer);
var 
   nextThread : NamedThread;
begin 
   (* 
   (threadRing[ name mod numberOfThreads ])(token);
   "Sorry, Calls like (a+b).method not implemented yet"
   *)

   nextThread := threadRing[ name mod numberOfThreads ]; 
   nextThread(token);
end NextThreadTake;


const numberOfThreads = 503;

var 
   thread : NamedThread;
   threadRing : array numberOfThreads of NamedThread;
   i : integer;

begin 
   for i := 0 to numberOfThreads-1 do 
      threadRing[i] := new NamedThread(i+1); 
   end;

   (* (threadRing[0])( BenchmarksGame.argi() ); *)

   thread := threadRing[0];
   thread( BenchmarksGame.argi() );
end threadring.



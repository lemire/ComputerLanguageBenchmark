{ The Computer Language Shootout
  http://shootout.alioth.debian.org
  contributed by DaniÃ«l Mantione
}

program nsievebits;

const bpc=sizeof(sizeuint)*8;

type sizeset=set of 0..bpc-1;

var  count:cardinal;
     data:^sizeset;

procedure primes(size:cardinal);

var prime,i:cardinal;

begin
  fillchar(data^,(size+bpc) div 8,0);
  count:=0;
  for prime:=2 to size do
    if not((prime and (bpc-1)) in data[prime div bpc]) then
      begin
        inc(count);
        i:=2*prime;
        while i<=size do
          begin
            include(data[i div bpc],i and (bpc-1));
            i:=i+prime;
          end;
      end;
  writeln('Primes up to',size:9,count:9);
end;

var n,size:cardinal;

begin
  val(paramstr(1),n);
  size:=10000 shl n;
  getmem(data,(size+bpc) div 8);
  primes(size);
  primes(size shr 1);
  primes(size shr 2);
  dispose(data);
end.

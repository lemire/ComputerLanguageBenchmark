# The Computer Language Shootout
# http://shootout.alioth.debian.org
# Free Pascal version by Joost van der Sluis
# Adapted to Psyco for max speed by bearophile, Jan 1 2005

import sys, psyco

def nprimes(size):
    bpc = 31 # used 31 bits only for each int
    flags = [2147483647] * (size / bpc + 1)

    count = 0
    for prime in xrange(2, size+1):
        offset = prime / bpc
        mask = 1 << (prime % bpc)
        if flags[offset] & mask:
            count += 1
            i = prime << 1
            while i <= size:
                offset = i / bpc
                mask = 1 << (i % bpc)
                if flags[offset] & mask:
                    flags[offset] &= ~mask
                i += prime
    print "Primes up to %8u %8u" % (size, count)

psyco.bind(nprimes)
m = int( (sys.argv+[2])[1] )
for i in 0, 1, 2:
    nprimes(10000 << (m-i))

' The Computer Language Shootout
' http://shootout.alioth.debian.org/
' contributed by Antoni Gual 5/2006
'
#include "crt.bi"
option explicit
option escape
dim shared p as uinteger ptr
'
'----------------------------------------------
sub dosieve(m)
dim maxf,i,inc,nn,ni
maxf=cint(sqr(m))+1
i=3
while i<= maxf
 nn=i*3 :ni=i*2
 while nn<=m
  p[nn\64] or= 1 shl((nn and 63)\2)
  nn+=ni
 wend 
 do :i+=2:loop while (p[i\64]) and (1 shl((i and 63)\2))
wend
end sub
'
'-----------------------------------------------
function bitcount(u as uinteger)
 dim uc as uinteger
 uc= u-((u shr 1) and &o33333333333)-((u shr 2) and &o11111111111)
 return ((uc+(uc shr 3)) and &o30707070707) mod 63  
end function
'
'-----------------------------------------------
sub countprimes (m)
dim cnt,i,m1,m2,m3,cnt1,cnt2,n2,n3
dim  a$="Primes up to ######## ########"
  n3=m\4\64
  m3=((m\4) and 63)\2
 for i=0 to n3-1
   cnt+=32-bitcount(p[i])
 next 
 cnt2= cnt+m3-bitcount(p[i] and ((1 shl (m3))-1))  

 n2=m\2\64
 m2=((m\2) and 63)\2
 for i=n3 to n2-1
   cnt+=32-bitcount(p[i])
 next 
 cnt1=  cnt+m2-bitcount(p[i] and ((1 shl (m2))-1)) 
 
 m1=(m and 63)\2
 for i=n2 to m\64-1
   cnt+=32-bitcount(p[i])
 next 
printf("Primes up to %8d %8d\n", m, cnt+m1-bitcount(p[i] and ((1 shl (m1))-1)))
printf("Primes up to %8d %8d\n", m\2, cnt1)
printf("Primes up to %8d %8d\n", m\4, cnt2) 
end sub
'
'------------------------------------------------
dim n,m,i,m1,cnt
if len(command)=0 then print "use: N-Sieve exponent":end
n=val(command)
m=(1 shl n)*10000
m1=(m\64+1) *sizeof(uinteger)
p =callocate(m1)
if err then ? "Could not allocate ";m1;" bytes" 
'? "Allocated ";m1;" bytes"
dosieve(m)
countprimes (m)
deallocate p
end

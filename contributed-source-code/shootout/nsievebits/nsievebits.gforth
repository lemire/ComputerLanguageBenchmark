\ The Great Computer Language Shootout
\ http://shootout.alioth.debian.org/
\ 
\ contributed by Ian Osgood

\ read NUM from last command line argument
0. argc @ 1- arg >number 2drop drop 2 max constant NUM

: bit-mask ( n -- addr mask )
  dup 5 rshift cells here +  1 rot 31 and lshift ;

: bit-on? ( n -- f ) bit-mask swap @ and ;

: bit-off ( n -- ) bit-mask invert over @ and swap ! ;

: sieve ( size -- n )
  here over 7 + 8 / -1 fill
  0 over 2 do
    i bit-on? if 1+
      over i 2* over min ?do
        i bit-off
      j +loop
    then
  loop nip ;

\ count primes up to 2^n*10000
: test ( n -- )
  1 swap lshift 10000 *
  ." Primes up to " dup 8 u.r sieve 9 u.r cr ;

\ run sieve for N, N-1, N-2
  NUM test  NUM 1- test  NUM 2 - test

bye  \ done!


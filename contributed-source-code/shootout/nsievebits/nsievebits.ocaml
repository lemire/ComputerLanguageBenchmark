(* The Computer Language Benchmarks Game
 * http://shootout.alioth.debian.org/
 *
 * Contributed by Christophe TROESTLER
 * modified by Mario Pernici
 * modified by Vladimir Silyaev
 * modified by Stefan Kral
 *)

open Char

let set_false a i =
  let ic = i lsr 3 in
  let v = code a.[ic] in
  let bit = v land lnot(1 lsl (i land 0x7)) in
    if v <> bit then a.[ic] <- unsafe_chr bit

let nsieve m =
  let a = String.make ((m lsr 3) + 1) '\255' in
  let count = ref 0 in
  for i = 2 to m - 1 do
    if (code a.[i lsr 3]) land (1 lsl (i land 7)) > 0 then (
      incr count;
      let j = ref(i+i) in
      while !j < m do set_false a !j; j := !j+i done;
    )
  done;
  !count

let test n =
  let m = 10000 lsl n in
  Printf.printf "Primes up to %8i %8i\n" m (nsieve m)

let () =
  let n =
    try int_of_string(Array.get Sys.argv 1)
    with _ -> (Printf.printf "usage: %s N\n" Sys.argv.(0); exit 2) in
  test n;
  if n >= 1 then test(n-1);
  if n >= 2 then test(n-2)


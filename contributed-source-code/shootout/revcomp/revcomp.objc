/* The Computer Language Shootout
   http://shootout.alioth.debian.org/
   contributed by Josh Goldfoot
*/

#include <stdio.h>
#include <string.h>
#include <ctype.h>
#include <stdlib.h>
#include <objc/Object.h>

@interface Seq : Object
{
  long buflen, bytesread;
  char *buffer;
  char header [64];
  char nextheader [64];
}
-init;
-free;
-(BOOL) read_seq;
-reverse_in_place;
-print_seq;
@end

@implementation Seq

-init {
  buflen = 127150;
  buffer = (char*) malloc(buflen);
  nextheader[0] = header[0] = 0;
  return [super init];
}
-free {
  if (buffer)
    free(buffer);
  return [super free];
}

-(BOOL) read_seq {
  int linelen;
  char *x, *tmp;

  if (nextheader[0] == 0)
    fgets(nextheader, 64, stdin);
  strncpy(header, nextheader, 64);
  x = buffer;
  bytesread = 0;
  while (fgets (x, 64, stdin)) {
    if (x[0] == '>') {
      strncpy(nextheader, x, 64);
      x[0] = 0;
      return YES;
    }
    linelen = strlen(x);
    bytesread = bytesread + linelen;
    if (buflen - bytesread < 80) {
      buflen *= 10;
      tmp = (char*) realloc (buffer, buflen + 1);
      if (! tmp) return NO;
      buffer = tmp;
      x = &(buffer[bytesread - linelen]);
    }
    x += linelen;
  }
  return NO;
}

-reverse_in_place {
   static char comp[26] = {'T', 'V', 'G', 'H', 'E', 'F', 'C', 'D', 'I', 'J', 
      'M', 'L', 'K', 'N', 'O', 'P', 'Q', 'Y', 'S', 'A', 'U', 'B', 'W',
      'X', 'R', 'Z'};
   char tmp;
   char* seqstart = buffer;
   char* seqend = &(buffer[bytesread - 1]);
      
   while (seqstart < seqend) {
     while (*seqstart < 'A')
	seqstart++;
     while (*seqend < 'A')
        seqend--;
     tmp = comp[toupper(*seqstart) - 'A'];
     *(seqstart++) = comp[toupper(*seqend) - 'A'];
     *(seqend--) = tmp;
   }
}

-print_seq {
  printf("%s", header);
  printf("%s", buffer);
}
@end

int main(int argc, char **argv)
{
  Seq* seq = [[Seq alloc] init];
  BOOL moretodo = YES;
  while (moretodo) {
    moretodo = [seq read_seq];
    [seq reverse_in_place];
    [seq print_seq];
  }
  return 0;
}

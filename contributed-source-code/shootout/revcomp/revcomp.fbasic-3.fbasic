' The Computer Language Shootout
' http://shootout.alioth.debian.org/
' contributed by Antoni Gual
'
option explicit
option escape
#include "crt.bi"
#define linelength 60
#define bufinc 1024*512
dim shared pairs(14)={asc("A"),asc("T"),_
                      asc("C"),asc("G"),_
                      asc("M"),asc("K"),_
                      asc("R"),asc("Y"),_
                      asc("K"),asc("M"),_
                      asc("V"),asc("B"),_
                      asc("H"),asc("D")}

dim shared compl(128) as ubyte
'
'---------------------------------------------
sub dopairs
  dim i
  for i=0 to 127:compl(i)=iif(i<96,i,i-32):next
  for i=0 to 12 step 2
   compl(pairs(i))      =pairs(i+1)
   compl(pairs(i)+32)   =pairs(i+1)
   compl(pairs(i+1))    =pairs(i)
   compl(pairs(i+1)+32) =pairs(i)
  next
end sub
'
'----------------------------------------------
sub doreverse ( b as zstring ptr,byval j)
   dim i,t as ubyte
   dim as ubyte ptr st,en,pc 
   if j=0 then exit sub 
    st=b
    en=b+j-1
    while st<=en
    t=compl(*st)
    *st=compl(*en)
    *en=t 
    st+=1
    en-=1
   wend 
end sub
'
'----------------------------------------------
sub doprint (byval b as zstring ptr,byval l)
  dim  c as ubyte=0
  dim m
  dim b1 as ubyte ptr
  b1=b 
  while l
   m=iif (l<linelength,l,linelength)
   b1+=m
   swap c, *b1
   puts(b) 
   swap c, *b1
   b=b1   
   l-=m
  wend
end sub     
'
'-----------------------------------------------
dim  as zstring ptr b,a
dim lall,lb,t
lall=bufinc
b=allocate(lall*sizeof(ubyte))
dopairs
open cons for input as # 1
a=b
b[0]=0 
do
 if a-b+128 >lall then 
    t=a-b
    lall+=bufinc 
    b= reallocate(b,lall*sizeof(ubyte))
    a=b+t
 end if 
 line input #1, *a
 if a[0]= asc(">") then
    doreverse b,a-b 
    doprint b,a-b  
    puts a   
    a=b
    b[0]=0
    continue do   
 end if 
 a+=len(*a) 
loop until eof(1)
doreverse b ,a-b
doprint b ,a-b
close 
deallocate b
end

;;; -*- mode: scheme -*-
;;; $Id$
;;; http://www.bagley.org/~doug/shootout/

(define (string->exact-integer string)
 (let ((n (string->number string)))
  (if (integer? n)
      (if (exact? n)
	  n
	  (panic "STRING->EXACT-INTEGER yields non-EXACT-INTEGER"))
      (panic "STRING->EXACT-INTEGER yields non-EXACT-INTEGER"))))

(define (main args)
  (let ((n (or (and (= (length args) 2) (string->number (cadr args))) 1)))
    (print-list "Ack(3," n "): " (ack 3 n))))

(define (ack m n)
  (cond ((zero? m) (+ n 1))
	((zero? n) (ack (- m 1) 1))
	(else      (ack (- m 1) (ack m (- n 1))))))

(define (print-list . items) (for-each display items) (newline))

(main (vector->list argv))

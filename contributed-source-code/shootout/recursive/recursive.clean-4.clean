/* The Computer Language Shootout 
   http://shootout.alioth.debian.org/
   contributed by Isaac Gouy (Clean novice) */
  
module recursive
import StdEnv, LanguageShootout

Start = 
   line  "Ack"  [3,n]          (ack 3 n)           toString         +++
   line  "Fib"  [a]            (fibr a)            (toStringWith 1) +++
   line  "Tak"  [3*m,2*m,m]    (tak (3*m)(2*m) m)  toString         +++
   line  "Fib"  [3]            (fib 3)             toString         +++
   line  "Tak"  [3.0,2.0,1.0]  (takr 3.0 2.0 1.0)  (toStringWith 1)  

   where 
   n = argi
   m = n-1
   a = 27.0 + toReal n
   
   line pre a r f = pre +++ "(" +++ csv f a "" +++ "): " +++ f r +++ "\n"           
   csv f [a] s = s +++ f a
   csv f [a:b] s = s +++ f a +++ "," +++ csv f b s

ack m n
   | m == 0   = n + 1
   | n == 0   = ack (m - 1) 1   
              = ack (m - 1) (ack m (n - 1))
fib n
   | n < 2   = 1
   = fib (n - 1) + fib (n - 2) 
   
fibr n
   | n < 2.0   = 1.0
   = fibr (n - 1.0) + fibr (n - 2.0) 

   
tak x y z
   | y < x   = tak (tak (x-1) y z)(tak (y-1) z x)(tak (z-1) x y)
             = z   
             
takr x y z
   | y < x   = takr (takr (x-1.0) y z)(takr (y-1.0) z x)(takr (z-1.0) x y)
             = z

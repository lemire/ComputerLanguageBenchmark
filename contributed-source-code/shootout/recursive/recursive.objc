// The Computer Language Shootout
// http://shootout.alioth.debian.org/
// converted to Objective-C from C by Scott Christley
// Compile with: gcc -O3 -s -fomit-frame-pointer -funroll-loops recursive.m -lobjc

#include <stdio.h>
#include <objc/Object.h>

@interface Fib : Object
{
}

- (int)Ack:(int)x :(int)y;
- (int)Fib:(int)n;
- (double)FibFP:(double)n;
- (int)Tak:(int)x :(int)y :(int)z;
- (double)TakFP:(double)x :(double)y :(double)z;
@end

@implementation Fib

- (int)Ack:(int)x :(int)y
{
  if (x == 0)
    return y+1;
  if (y == 0)
    return [self Ack: x-1 : 1];
  return [self Ack: x-1 : [self Ack:x : y-1]];
}

- (int)Fib:(int)n
{
  if (n < 2)
    return 1;
  return [self Fib: n-2] + [self Fib: n-1];
}

- (double)FibFP:(double)n
{
  if (n < 2.0)
    return 1.0;
  return [self FibFP: n-2.0] + [self FibFP: n-1.0];
}

- (int)Tak:(int)x :(int)y :(int)z
{
  if (y < x)
    return [self Tak: [self Tak: x-1 : y : z]
		 : [self Tak: y-1 : z : x]
		 : [self Tak: z-1 : x : y]];
  return z;
}

- (double)TakFP:(double)x :(double)y :(double)z
{
  if (y < x)
    return [self TakFP: [self TakFP: x-1.0 : y : z]
		 : [self TakFP: y-1.0 : z : x]
		 : [self TakFP: z-1.0 : x : y]];
  return z;
}

@end

int main(int argc, char **argv) {
  int n = atoi(argv[1]) - 1;
  Fib *aFib = [Fib new];
  printf("Ack(3,%d): %d\n", n+1, [aFib Ack: 3 : n+1]);
  printf("Fib(%.1f): %.1f\n", 28.0+n, [aFib FibFP: 28.0+n]);
  printf("Tak(%d,%d,%d): %d\n", 3*n, 2*n, n, [aFib Tak: 3*n : 2*n : n]);
  printf("Fib(3): %d\n", [aFib Fib: 3]);
  printf("Tak(3.0,2.0,1.0): %.1f\n", [aFib TakFP: 3.0 : 2.0 : 1.0]);
  return 0;
}

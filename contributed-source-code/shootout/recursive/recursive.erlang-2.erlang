% The Computer Language Benchmarks Game
% http://shootout.alioth.debian.org/
% contributed by Fredrik Svahn

-module(recursive).
-export([main/1]).

fibF(N) when is_float(N), N<2.0-> 1.0;
fibF(N) when is_float(N)-> fibF(N-2.0) + fibF(N-1.0).
fibI(N) when is_integer(N), N<2-> 1;
fibI(N) when is_integer(N)-> fibI(N-2) + fibI(N-1).

ack(0,Y) when is_integer(Y)-> Y+1;
ack(X,0) when is_integer(X)-> ack(X-1,1);
ack(X,Y) when is_integer(X), is_integer(Y)-> ack(X-1, ack(X,Y-1)).

%Only used for small numbers -> don't optimize for float!
tak(X, Y, Z) when Y < X-> tak(tak(X-1,Y,Z), tak(Y-1,Z,X), tak(Z-1,X,Y));
tak(_, _, Z) -> Z.

main([Arg]) ->
    N = list_to_integer(Arg), M=N-1,
    io:fwrite("Ack(3,~w): ~w\n", [N, ack(3, N)]),
    io:fwrite("Fib(~.1f): ~.1f\n", [27.0+N, fibF(27.0+N)]),
    io:fwrite("Tak(~w,~w,~w): ~w\n", [M*3,M*2,M, tak(M*3,M*2,M)]),
    io:fwrite("Fib(3): ~w\n", [fibI(3)]),
    io:fwrite("Tak(3.0,2.0,1.0): ~.1f\n", [tak(3.0,2.0,1.0)]),
    halt(0).






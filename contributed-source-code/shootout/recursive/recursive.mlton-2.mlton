(* The Computer Language Shootout
   http://shootout.alioth.debian.org/
   contributed by Scott Cruzen
*)

fun ack x y = if x = 0 then y + 1 else if y = 0 then ack (x - 1) 1 else ack (x - 1) (ack x (y - 1))

fun fib n = if n < 2 then 1 else fib (n - 2) + fib (n - 1)

fun fibr n = if n < 2.0 then 1.0 else fibr (n - 2.0) + fibr (n - 1.0)

fun tak x y z = if y < x then tak (tak (x - 1.0) y z) (tak (y - 1.0) z x) (tak (z - 1.0) x y) else z

fun taki x y z = if y < x then taki (taki (x - 1) y z) (taki (y - 1) z x) (taki (z - 1) x y) else z

val a = valOf (Int.fromString (hd (CommandLine.arguments())))
val b = a - 1 val c = 27.0 + Real.fromInt a
val ifmt = Int.toString val rfmt = Real.fmt (StringCvt.FIX (SOME 1)) 

val _ = (print (concat ["Ack(3," , ifmt a ,"): ", ifmt (ack 3 a), "\n"])
        ; print (concat ["Fib(", rfmt c, "): " , rfmt (fibr c), "\n"])
        ; print (concat ["Tak(", ifmt (b*3), ",", ifmt (b*2), ",", ifmt b, "): ",
            ifmt (taki (b*3) (b*2) b), "\n"])
        ; print (concat ["Fib(3): " ,ifmt (fib 3), "\n"])
        ; print (concat ["Tak(3.0,2.0,1.0): " , rfmt (tak 3.0 2.0 1.0), "\n"]))

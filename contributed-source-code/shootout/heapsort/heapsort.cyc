/*
 * http://www.bagley.org/~doug/shootout/
 */

#include <stdio.h>
#include <stdlib.h>

#define IM 139968
#define IA   3877
#define IC  29573

double
gen_random(double max) {
    static long last = 42;
    return( max * (last = (last * IA + IC) % IM) / IM );
}

void
do_heapsort(int n, double ?ra) {
    int i, j;
    int ir = n;
    int l = (n >> 1) + 1;
    double rra;
    double @ra_one = &ra[1];

    for (;;) {
	if (l > 1) {
	    rra = ra[--l];
	} else {
	    rra = ra[ir];
	    ra[ir] = *ra_one;
	    if (--ir == 1) {
		*ra_one = rra;
		return;
	    }
	}
	i = l;
	j = l << 1;
	while (j <= ir) {
	    if (j < ir && ra[j] < ra[j+1]) { ++j; }
            double temp = ra[j];
	    if (rra < temp) {
		ra[i] = temp;
		j += (i = j);
	    } else {
		j = ir + 1;
	    }
	}
	ra[i] = rra;
    }
}

int
main(int argc, char ??argv) {
    int N = ((argc == 2) ? atoi(argv[1]) : 1);
    unsigned M = N+1;
    double ?ary;
    unsigned int i;
    /* create an array of N random doubles */
    ary = (double ?)malloc(M * sizeof(double));
    for (i=1; i < M; i++) {
        ary[i] = gen_random(1);
    }

    do_heapsort(N, ary);

    printf("%.10f\n", ary[N]);

    free(ary);
    return(0);
}


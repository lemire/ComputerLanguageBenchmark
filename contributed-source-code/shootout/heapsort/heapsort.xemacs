;;; -*- mode: emacs-lisp -*-
;;; $Id$
;;; http://www.bagley.org/~doug/shootout/

(defconst IM     139968)
(defconst IA       3877)
(defconst IC      29573)

(defvar LAST 42)

(defun gen_random (max)
  (/ (* max (setq LAST (% (+ (* LAST IA) IC) IM))) IM))

(defun heapsort (n ra)
  (let ((ir n)
	(l (+ (lsh n -1) 1))
	(i 0) 
	(j 0)
	(rra 0.0))
    (catch 'return
      (while t
	(cond ((> l 1)
	       (setq rra (aref ra (setq l (- l 1)))))
	      (t
	       (setq rra (aref ra ir))
	       (aset ra ir (aref ra 1))
	       (setq ir (- ir 1))
	       (if (= ir 1)
		   (throw 'return (aset ra 1 rra)))))
	(setq i l)
	(setq j (lsh l 1))
	(while (<= j ir)
	  (cond ((and (< j ir) (< (aref ra j) (aref ra (+ j 1))))
		 (setq j (+ j 1))))
	  (cond ((< rra (aref ra j))
		 (aset ra i (aref ra j))
		 (setq j (+ j (setq i j))))
		(t
		 (setq j (+ ir 1)))))
	(aset ra i rra)))))

(defun main ()
  (let* ((arg (car command-line-args-left))
	 (n (if arg (string-to-number arg) 1))
	 (last (+ n 1))
	 (ary (make-vector last 0)))
    (dotimes (i last)
      (aset ary i (gen_random 1.0)))
    (heapsort n ary)
    (princ (format "%.10f\n" (aref ary n)))
  (kill-emacs 0)))

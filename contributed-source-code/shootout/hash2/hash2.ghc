-- $Id$
-- http://shootout.alioth.debian.org
--
-- By Bryn Keller
-- Updated by Greg Buchholz to comply with test intent
import System (getArgs)
import Data.FiniteMap

get fm k = lookupWithDefaultFM fm 0 k
keys = map (\x -> "foo_" ++ show x) [0..9999]
hash1 = listToFM $ zip keys [0..9999]
hash2 = listToFM $ zip keys (repeat 0)
update k fm = let x = (get hash1 k + get fm k)
                in x `seq` addToFM fm k x
--update k fm = addToFM_C (+) fm k (get hash1 k)

main = do
 [n] <- getArgs
 let res = foldr update hash2 (concat $ replicate (read n) keys)
 putStrLn $ unwords $ map show [get hash1 "foo_1",
                                get hash1 "foo_9999",
                                get res "foo_1",
                                get res "foo_9999"] 

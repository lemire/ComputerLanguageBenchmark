(* The Great Computer Language Shootout
 * http://shootout.alioth.debian.org/
 *
 * Contributed by Vesa Karvonen.
 *)

(* abbreviations *)
structure A=CommandLine and C=CML and I=Int and R=RunCML

(* utilities *)
val (i2s, s2i) = (I.toString, I.fromString)
fun repeat n f x = if n<=0 then x else repeat (n-1) f (f x)

(* makes a link thread *)
fun mkLink s = let val c = C.channel ()
                   fun lp () = (C.send (s, C.recv c+1) ; lp ())
               in ignore (C.spawn lp) ; c end

(* driver *)
fun go n m () =
  let val (b, e) = let val e = C.channel () in (repeat m mkLink e, e) end
  in print (i2s (repeat n (fn s => (C.send (b, 0) ; C.recv e+s)) 0)^"\n") end

val _ = R.doit (go (valOf(s2i(hd(A.arguments()))) handle _ => 1) 500, NONE)

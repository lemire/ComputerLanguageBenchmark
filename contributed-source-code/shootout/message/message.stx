"* The Computer Language Benchmarks Game
    http://shootout.alioth.debian.org/
    contributed by Paolo Bonzini *"!

"* SPLITFILE=Tests.st *"!

Object subclass:#Tests
   instanceVariableNames:''
   classVariableNames:''
   poolDictionaries:''
   category:'benchmarks-game'
!

!Tests class methodsFor:'benchmarks-game'!

message: n   | tail head sum |   head := tail := Consumer new.   500 timesRepeat: [head := ProducerConsumer fork: head].   sum := 0.   n timesRepeat:      [head msg: 0.      sum := sum + tail msg].   ^sum
!

main
    Stdout print: (self message: Smalltalk commandLineArguments last asNumber); cr
! !

"* SPLITFILE=Consumer.st *"

Object subclass: #Consumer
   instanceVariableNames: 'semaphore msg'
   classVariableNames: ''
   poolDictionaries: ''
   category: 'benchmarks-game'
!

!Consumer class methodsFor:'instance creation'!
new    | var |    var := self basicNew.    var semaphore: Semaphore new.    ^var
! !

!Consumer methodsFor:'accessing'!
msg    semaphore wait.    ^msg
!

msg: data    msg := data.    semaphore signal
!

semaphore: aSemaphore    semaphore := aSemaphore
! !

"* SPLITFILE=ProducerConsumer.st *"

Consumer subclass: #ProducerConsumer
   instanceVariableNames: 'consumer'
   classVariableNames: ''
   poolDictionaries: ''
   category: 'benchmarks-game'
!

!ProducerConsumer class methodsFor:'instance creation'!
fork: consumer    | proc |    proc := self new.    proc consumer: consumer.    proc fork.    ^proc
! !


!ProducerConsumer methodsFor:'accessing'!
consumer: aProcess    consumer := aProcess
!

fork    [ self run ] fork
! 

run    [ consumer msg: self msg + 1 ] repeat
! !



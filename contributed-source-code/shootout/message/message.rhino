// The Great Computer Language Shootout
// http://shootout.alioth.debian.org/
//
// Contributed by Jesse Millikan

importPackage(java.lang)
importPackage(java.util.concurrent)

// Two boxes are linked together with a thread
// Get from b1, increment, put it in b2, N times
// Must be done in a separate function to scope b1 and b2 properly
function link(b1, b2){
 new Thread(function(){
  for(var i=0; i<N; i++) 
   b2.put(parseInt(b1.take()) + 1)
 }).start()
}

N = parseInt(arguments[0])

// Use a sized queue to block on 1 value
next = last = new ArrayBlockingQueue(1)

// Link 500 boxes together, back-to-front, each b to next
for(i = 0; i < 500; i++){
 b = new ArrayBlockingQueue(1) 
 link(b, next)
 next = b
}

// Link -1 with (put 0s into) the first box
link({take: function(){return -1}}, next)

total = 0 // Get N values from the last box
for(i = 0; i < N; i++) total += parseInt(last.take())
print(total)

/* -*- mode: objc -*-
 *
 * The Computer Language Benchmarks Game
 * http://shootout.alioth.debian.org/
 *
 * Original C# Mono contributed by Isaac Gouy
 * Conversion to Objective-C by Selman Ulug
 */

#include <objc/Object.h>
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

@interface SpectralNorm : Object
{
  int N;
}
- (double) approximate: (int)n;
- (double) A: (int)i : (int)j;
- (void) multiplyAv: (double[])v : (double[])Av;
- (void) multiplyAtv: (double[])v : (double[])Atv;
- (void) multiplyAtAv: (double[])v : (double[])AtAv;
@end

@implementation SpectralNorm 
- (double) approximate: (int)n
{
  N = n;
  double u[N], v[N], vBv, vv;
  int i;

  for (i = 0; i < N; i++)
    u[i] = 1;

  for (i = 0; i < 10; i++)
    {
      [self multiplyAtAv: u : v];
      [self multiplyAtAv: v : u];
    }
  
  vBv =  vv = 0;
  for (i = 0; i < n; i++)
    {
      vBv += u[i] * v[i];
      vv += v[i] * v[i];
    }
  
  return sqrt (vBv / vv);
}

- (double) A: (int)i : (int)j
{
  return 1.0 / ((i + j) * (i + j + 1) / 2 + i + 1);
}

- (void) multiplyAv: (double[])v : (double[])Av
{
  int i, j;

  for (i = 0; i < N; i++)
    {
      Av[i] = 0;
      for (j = 0; j < N; j++)
	Av[i] += [self A: i : j] * v[j];
    }
}

- (void) multiplyAtv: (double[])v : (double[])Atv
{
  int i, j;

  for (i = 0; i < N; i++)
    {
      Atv[i] = 0;
      for (j = 0; j < N; j++)
	Atv[i] += [self A: j : i] * v[j];
    }
}

- (void) multiplyAtAv: (double[])v : (double[])AtAv
{
  double u[N];

  [self multiplyAv: v : u];
  [self multiplyAtv: u : AtAv];
}
@end

int
main (int argc, char **argv)
{
  int N = ((argc == 2) ? atoi (argv[1]) : 2000);
  
  SpectralNorm* sn = [[SpectralNorm alloc] init];
  printf ("%0.9f\n", [sn approximate: N]);

  return 0;
}

\ The Great Computer Language Shootout
\ http://shootout.alioth.debian.org/

\ contributed by Ian Osgood

\ read NUM from last command line argument
0. argc @ 1- arg >number 2drop drop constant NUM

\ return element i,j of infinite matrix A
: A@ ( i j -- f )
  over + dup 1+ * 2/ + 1+  s>d d>f 1/f ;

\ multiply vector by matrix A
: A* ( out in -- )
  NUM 0 do  0e
    NUM 0 do  dup i floats + f@ j i A@ f* f+  loop
    over i floats + f!
  loop 2drop ;

\ multiply vector by matrix A transposed
: At* ( out in -- )
  NUM 0 do  0e
    NUM 0 do  dup i floats + f@ i j A@ f* f+  loop
    over i floats + f!
  loop 2drop ;

\ composition of A* and At*
: AtA* ( out in -- ) falign here dup rot A* At* ;

: 1efill ( n -- ) 0 do 1e f, loop ;
falign create u NUM 1efill           \ unit vector
falign create v NUM floats allot

: approx ( -- f ) 
  10 0 do  v u AtA*  u v AtA*  loop  \ power method
  0e 0e ( vBv vv )
  NUM 0 do
    fswap u i floats + f@ v i floats + f@ f* f+
    fswap v i floats + f@ fdup f* f+
  loop
  f/ fsqrt ;

: ff.  f$ scratch drop over type '. emit scratch rot /string type ;

approx 10 set-precision ff. cr bye  \ done!


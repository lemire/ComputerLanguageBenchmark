/* ------------------------------------------------------------------ */
/* The Great Computer Language Shootout                               */
/* http://shootout.alioth.debian.org/                                 */
/*                                                                    */
/* Contributed by Anthony Borla                                       */
/* ------------------------------------------------------------------ */

NULL = "" ; IA = 3877 ; IC = 29573 ; IM = 139968 ; LAST = 42 ; LINELENGTH = 60

ALU = "GGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGG"||,
      "GAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGA"||,
      "CCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAAT"||,
      "ACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCA"||,
      "GCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGG"||,
      "AGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCC"||,
      "AGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAA"


IUB = "a 0.27 c 0.12 g 0.12 t 0.27",
      "B 0.02 D 0.02 H 0.02 K 0.02",
      "M 0.02 N 0.02 R 0.02 S 0.02",
      "V 0.02 W 0.02 Y 0.02"

HOMOSAPIENS = "a 0.3029549426680",
              "c 0.1979883004921",
              "g 0.1975473066391",
              "t 0.3015094502008"

N = ARG(1) ; if DATATYPE(N) \= 'NUM' | N < 1 then ; N = 1000

call make_repeat_fasta "ONE", "Homo sapiens alu", N * 2
call make_random_fasta "TWO", "IUB ambiguity codes", N * 3, make_cumulative(IUB) 
call make_random_fasta "THREE", "Homo sapiens frequency", N * 5, make_cumulative(HOMOSAPIENS) 

exit 0

/* ----------------------------- */

gen_random : procedure expose IA IC IM LAST
  LAST = (LAST * IA + IC) // IM
  return ARG(1) * LAST / IM

/* ----------------------------- */

select_random : procedure expose IA IC IM LAST NULL
  ctbl = ARG(1) ; rvalue = gen_random(1.0)

  if rvalue \< 1.0 then ; return WORD(ctbl, 1)

  do while ctbl <> NULL
    parse var ctbl key value ctbl
    if rvalue < value then ; return key
  end

/* ----------------------------- */

make_cumulative : procedure expose NULL
  ptbl = ARG(1) ; cp = 0.0 ; ctbl = NULL

  do while ptbl <> NULL
    parse var ptbl key value ptbl
    cp = cp + value
    ctbl = ctbl key cp
  end

  return STRIP(ctbl)

/* ----------------------------- */

make_repeat_fasta : procedure expose LINELENGTH ALU NULL
  id = ARG(1) ; desc = ARG(2) ; n = ARG(3)

  alulen = LENGTH(ALU) ; lines =  n % LINELENGTH
  ALT = ALU||SUBSTR(ALU, 1, LINELENGTH)

  say ">"||id desc

  do i = 0 for lines
    p = i * LINELENGTH + 1 ; q = p // alulen
    if q = 0 then ; q = 1
    say SUBSTR(ALT, q, LINELENGTH)
  end 

  p = lines * LINELENGTH + 1 ; q = p // alulen
  if q = 0 then ; q = 1
  say SUBSTR(ALU, q, n // LINELENGTH)

  return

/* ----------------------------- */

make_random_fasta : procedure expose IA IC IM LAST LINELENGTH NULL
  id = ARG(1) ; desc = ARG(2) ; n = ARG(3) ; ctbl = ARG(4)

  lines = n % LINELENGTH ; LASTLINELEN = n // LINELENGTH ; lineout = NULL

  say ">"||id desc

  do i = 0 for lines
    do j = 1 for LINELENGTH
      lineout = lineout || select_random(ctbl)
    end
    say lineout ; lineout = NULL
  end 

  if LASTLINELEN = 0 then ; return

  do j = 1 for LASTLINELEN
    lineout = lineout || select_random(ctbl)
  end
  say lineout

  return

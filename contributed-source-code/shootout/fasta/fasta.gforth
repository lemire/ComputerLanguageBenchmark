\ fasta.gforth
\ Submitted by Ian Osgood

\ read NUM from last command line argument
0. argc @ 1- arg >number 2drop drop constant NUM

\ random
42 value seed
: random ( -- u ) seed 3877 * 29573 + 139968 mod dup to seed ;
: gen-random ( r -- r' ) random s>d d>f f* 139968e f/ ;

60 constant line-len

\ data arrays
create ALU
  s" GGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGG" mem,
  s" GAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGA" mem,
  s" CCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAAT" mem,
  s" ACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCA" mem,
  s" GCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGG" mem,
  s" AGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCC" mem,
  s" AGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAA" mem,
here constant ALU-end

: f+, ( a f -- a' ) f+ fdup f, ;
: 0.02-remainder, ( a -- a>=1)
  begin fdup 1e f< while 0.02e f+, repeat ;

\ " acgtBDHKMNRSVWY"
falign create IUB   0e
  0.27e f+,  0.12e f+,  0.12e f+,  0.27e f+,
  0.02-remainder, fdrop

\ " acgt"
falign create HomoSap  0e
  0.3029549426680e f+,  0.1979883004921e f+,
  0.1975473066391e f+,  0.3015094502008e f+,  fdrop

: next-char ( a -- a' c )
  dup ALU-end = if drop ALU then  dup char+ swap c@ ;
: ?cr ( col -- col' ) 1- dup 0= if cr line-len + then ;
: ?end-cr ( col -- ) line-len < if cr then ;

: fasta-repeat ( n -- ) ALU line-len
  begin rot dup while 1-
    rot next-char emit rot ?cr
  repeat drop ?end-cr drop ;

: sel-random ( probs -- probs c )
  1e gen-random s" acgtBDHKMNRSVWY" drop over
  begin dup f@ fover f< while float+ swap char+ swap repeat
  fdrop drop c@ ;

: fasta-random ( n which -- ) line-len
  begin rot dup while 1-
    rot sel-random emit rot ?cr
  repeat drop ?end-cr drop ;

: main
  ." >ONE Homo sapiens alu" cr
  NUM 2* fasta-repeat
  ." >TWO IUB ambiguity codes" cr
  NUM 3 * IUB fasta-random
  ." >THREE Homo sapiens frequency" cr
  NUM 5 * HomoSap fasta-random ;

main bye  \ done!



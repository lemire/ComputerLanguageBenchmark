/* The Computer Language Shootout
   http://shootout.alioth.debian.org/

   contributed by Josh Goldfoot
   for JavaScript Rhino only
*/

importPackage(java.io);
importPackage(java.lang);

function generateFrequencies(seq, len) {
   var ns = seq.length + 1 - len;
   frequencies = new Object(); // All objects are also hashtables
   for (var i = 0; i < ns; i++) {
      var nucleo = seq.slice(i, i + len);
      if (nucleo in frequencies)
         frequencies[nucleo] += 1;
      else
         frequencies[nucleo] = 1;
   }
   return frequencies;
}

function writeFrequencies(seq, len) {
   var frequencies = generateFrequencies(seq, len);
   var freqArray = new Array();
   var total = 0;
   for (var nucleo in frequencies) {
      total += frequencies[nucleo];
      freqArray.push( { 'num': frequencies[nucleo], 'nuc': nucleo } );
   }
   freqArray.sort(function(a,b) { return b['num'] - a['num'];});
   for (var i in freqArray) {
      var percent = freqArray[i]['num'] * 100 / total;
      print(freqArray[i]['nuc'] + " " + percent.toFixed(3));
   }
   print();
}

function writeCount(seq, s) {
   var frequencies = generateFrequencies(seq, s.length);
   print((s in frequencies ? frequencies[s] : 0) + "\t" + s);
}

// Read in standard input.  Borrowed from the Java implementation, kind of.
var sbuffer = new StringBuffer();
var line;
var stdin = new BufferedReader(
   new InputStreamReader(Packages.java.lang.System['in']));
while ((line = stdin.readLine()) != null) {
   if (line.startsWith(">THREE")) break;
}
var c;
while ((line = stdin.readLine()) != null) {
   c = line.charAt(0);
   if (c == '>')
      break;
   else if (c != ';')
      sbuffer.append(line.toUpperCase());
}
var seq = '' + sbuffer.toString();
sbuffer = null;

writeFrequencies(seq, 1);
writeFrequencies(seq, 2);
nucleos = 'GGT GGTA GGTATT GGTATTTTAATT GGTATTTTAATTTATAGT'.split(' ');
for (i in nucleos) {
   writeCount(seq, nucleos[i]);
}


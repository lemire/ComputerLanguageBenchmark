% The Computer Language Benchmarks Game
% http://shootout.alioth.debian.org/
%
% Based on D language implementation by David Fladebo and work by Anthony Borla
% contributed by Glendon Holst

:- module partialsums.
:- interface.
:- import_module io.

:- pred main(io::di, io::uo) is det.

% ----------------------------------------------------------------------

:- implementation.

:- import_module list.
:- import_module int.
:- import_module float.
:- import_module math.
:- import_module string.

% ----------------------------------------------------------------------

:- type sums == {float, float, float, float, float, float, float, float, float}.

% ----------------------------------------------------------------------

main(!IO) :-
	io.command_line_arguments(Args, !IO),
	(
		if
			Args = [AString|_],
			string.to_int(string.strip(AString), Aint)
		then
			N = Aint
		else
			N is 2500000
	),
	
	Sums0 = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
	compute_sums(N, Sums0, Sums), print_sums(Sums, !IO).

% ------------------------------- %

:- pred compute_sums(int::in, sums::in, sums::out) is det.
:- pred compute_sums_(int, float, float, sums, sums) is det.
:- mode compute_sums_(in, in, in, in, out) is det.

compute_sums(N, Sums0, Sums) :- compute_sums_(N, 1.0, 1.0, Sums0, Sums).

% ------------- %

compute_sums_(N, D, Alt, Sums0, Sums) :- 
(
	N > 0 ->
	Sums0 = {A1, A2, A3, A4, A5, A6, A7, A8, A9},

	D2 is D * D, D3 is D2 * D, DS is sin(D), DC is cos(D),

	A1N is A1 + pow((2.0 / 3.0), (D - 1.0)),
	A2N is A2 + 1.0 / sqrt(D),
	A3N is A3 + 1.0 / (D * (D + 1.0)),
	A4N is A4 + 1.0 / (D3 * DS * DS),
	A5N is A5 + 1.0 / (D3 * DC * DC),
	A6N is A6 + 1.0 / D,
	A7N is A7 + 1.0 / (D2),
	A8N is A8 + Alt / D,
	A9N is A9 + Alt / (2.0 * D - 1.0),
	
	compute_sums_(N - 1, D + 1.0, -Alt, 
		{A1N, A2N, A3N, A4N, A5N, A6N, A7N, A8N, A9N}, Sums)
;
	Sums = Sums0
).

% ------------------------------- %

:- pred print_sums(sums::in, io::di, io::uo) is det.

print_sums(Sums, !IO) :-
	Sums = {A1, A2, A3, A4, A5, A6, A7, A8, A9},

	io.format("%.9f\t(2/3)^k\n", [f(A1)], !IO),
	io.format("%.9f\tk^-0.5\n", [f(A2)], !IO),
	io.format("%.9f\t1/k(k+1)\n", [f(A3)], !IO),
	io.format("%.9f\tFlint Hills\n", [f(A4)], !IO),
	io.format("%.9f\tCookson Hills\n", [f(A5)], !IO),
	io.format("%.9f\tHarmonic\n", [f(A6)], !IO),
	io.format("%.9f\tRiemann Zeta\n", [f(A7)], !IO),
	io.format("%.9f\tAlternating Harmonic\n", [f(A8)], !IO),
	io.format("%.9f\tGregory\n", [f(A9)], !IO).

% ------------------------------- %

\ Computer Language Shootout
\ http://shootout.alioth.debian.org/
\ contributed by Ian Osgood (R. by Brad Eckert)

\ read NUM from last command line argument
0. argc @ 1- arg >number 2drop drop constant NUM

\ printf("%.9f"): show nine digits past the decimal point

: fsplit        ( F: r -- ) ( precision -- sign Dint Dfrac ) 
  \ *G Split float into integer component parts. 
  >R FDUP F0< FABS                \ int part must fit in a double 
  FDUP F>D 2DUP D>F F-            \ get int, leave frac 
  2. R> 0 ?DO D2* 2DUP D2* D2* D+ LOOP \ 2 * 10^precision 
  D>F F* F>D  1. D+ D2/ ;        \ round 

: R.          ( F: r -- ) ( precision -- ) 
  \ *G Convert float to a string of a given precision 
  <# DUP >R fsplit R@ 0 ?DO # LOOP D+ 
  R> IF [CHAR] . HOLD THEN #S ROT SIGN #> type ;

: sumFn ( xt start -- ) 0e
  NUM 1+ swap do I 0 d>f dup execute f+ loop drop  9 R. #tab emit ;

\ all these are ( f -- f )

:noname [ 2e 3e f/ ] fliteral fswap f** ; 0 sumFn ." (2/3)^k" cr

:noname fsqrt 1/f ; 1 sumFn ." k^-0.5" cr

:noname fdup 1e f+ f* 1/f ; 1 sumFn ." 1/k(k+1)" cr

:noname fdup fsin fdup f* fover f* fover f* f* 1/f ; 1 sumFn ." Flint Hills" cr

:noname fdup fcos fdup f* fover f* fover f* f* 1/f ; 1 sumFn ." Cookson Hills" cr

' 1/f 1 sumFn ." Harmonic" cr

:noname fdup f* 1/f ; 1 sumFn ." Riemann Zeta" cr

\ these are ( sum f -- sum f )

:noname 1/f fnegate fswap fnegate fswap ; 1 sumFn ." Alternating Harmonic" cr

:noname f2* 1e f- 1/f fnegate fswap fnegate fswap ; 1 sumFn ." Gregory" cr

bye

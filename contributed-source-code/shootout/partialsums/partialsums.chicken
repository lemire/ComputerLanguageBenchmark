;;; The Computer Language Benchmarks Game
;;; http://shootout.alioth.debian.org/
;;;
;;; contributed by Anthony Borla

(require-extension format)

(define (main args)
  (let ((n (if (null? args)
               1
               (string->number (car args))))

    (alt 1) (d2 0) (d3 0) (ds 0) (dc 0)
    (s0 0) (s1 0) (s2 0) (s3 0) (s4 0) (s5 0) (s6 0) (s7 0) (s8 0))

    (do ((d 1 (+ d 1)))
        ((< n d))

      (set! d2 (* d d))
      (set! d3 (* d2 d))
      (set! ds (sin d))
      (set! dc (cos d))

      (set! s0 (+ s0 (expt (/ 2 3) (- d 1))))
      (set! s1 (+ s1 (/ 1 (sqrt d))))
      (set! s2 (+ s2 (/ 1 (* d (+ d 1)))))
      (set! s3 (+ s3 (/ 1 (* d3 (* ds ds)))))
      (set! s4 (+ s4 (/ 1 (* d3 (* dc dc)))))
      (set! s5 (+ s5 (/ 1 d)))
      (set! s6 (+ s6 (/ 1 d2)))
      (set! s7 (+ s7 (/ alt d)))
      (set! s8 (+ s8 (/ alt (- (* 2 d) 1))))
      (set! alt (- alt))) 

    (format #t "~,9F~A(2/3)^k~%" s0 #\tab)
    (format #t "~,9F~Ak^-0.5~%" s1 #\tab)
    (format #t "~,9F~A1/k(k+1)~%" s2 #\tab)
    (format #t "~,9F~AFlint Hills~%" s3 #\tab)
    (format #t "~,9F~ACookson Hills~%" s4 #\tab)
    (format #t "~,9F~AHarmonic~%" s5 #\tab)
    (format #t "~,9F~ARiemann Zeta~%" s6 #\tab)
    (format #t "~,9F~AAlternating Harmonic~%" s7 #\tab)
    (format #t "~,9F~AGregory~%" s8 #\tab)))

(main (command-line-arguments))


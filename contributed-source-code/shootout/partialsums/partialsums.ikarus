;; The Computer Language Benchmarks Game
;; http://shootout.alioth.debian.org/
;;
;; Derived by Michael D. Adams from the Chicken variant

(import (rnrs))

;;; Stupid boiler-plate for formatting floating point values
(define (roundto digits n)
  (let* ([e (expt 10 digits)]
         [num (round (abs (* e (exact n))))]
         [str (number->string (mod num e))])
    (string-append
     (if (negative? n) "-" "")
     (number->string (div num e))
     "."
     (make-string (- digits (string-length str)) #\0)
     str)))

(define (main args)
  (let ([n (inexact (string->number (cadr args)))]
        [fl2/3 (fl/ 2.0 3.0)]
        [format-result
         (lambda (str n)
           (display (roundto 9 n))
           (display str))])
    (let loop ([d 0.0]
               (alt 1.0) (d2 0.0) (d3 0.0) (ds 0.0) (dc 0.0)
               (s0 0.0) (s1 0.0) (s2 0.0) (s3 0.0) (s4 0.0)
               (s5 0.0) (s6 0.0) (s7 0.0) (s8 0.0))
      (if (= d n)
          (begin
            (format-result "\t(2/3)^k\n" s0)
            (format-result "\tk^-0.5\n" s1)
            (format-result "\t1/k(k+1)\n" s2)
            (format-result "\tFlint Hills\n" s3)
            (format-result "\tCookson Hills\n" s4)
            (format-result "\tHarmonic\n" s5)
            (format-result "\tRiemann Zeta\n" s6)
            (format-result "\tAlternating Harmonic\n" s7)
            (format-result "\tGregory\n" s8))

          (let* ((d (fl+ d 1.0))
                 (d2 (fl* d d))
                 (d3 (fl* d2 d))
                 (ds (flsin d))
                 (dc (flcos d))

                 (s0 (fl+ s0 (flexpt fl2/3 (fl- d 1.0))))
                 (s1 (fl+ s1 (fl/ 1.0 (flsqrt d))))
                 (s2 (fl+ s2 (fl/ 1.0 (fl* d (fl+ d 1.0)))))
                 (s3 (fl+ s3 (fl/ 1.0 (fl* d3 (fl* ds ds)))))
                 (s4 (fl+ s4 (fl/ 1.0 (fl* d3 (fl* dc dc)))))
                 (s5 (fl+ s5 (fl/ 1.0 d)))
                 (s6 (fl+ s6 (fl/ 1.0 d2)))
                 (s7 (fl+ s7 (fl/ alt d)))
                 (s8 (fl+ s8 (fl/ alt (fl- (fl* 2.0 d) 1.0))))
                 (alt (fl- alt)))

            (loop d
                  alt d2 d3 ds dc
                  s0 s1 s2 s3 s4 s5 s6 s7 s8))))))

(main (command-line))

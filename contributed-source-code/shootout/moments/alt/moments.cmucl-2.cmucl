;;; -*- mode: lisp -*-
;;; $Id$
;;; http://shootout.alioth.debian.org/


(defun main ()
  (let ((sum 0.0d0)
	(nums (make-array 1024 :element-type 'double-float
			  :fill-pointer 0 :adjustable t)))
    (declare (optimize (speed 3) (debug 0) (safety 0))
	     (double-float sum))

    (do* ((line (read-line *standard-input*)
		(read-line *standard-input* nil 'eof))
	  (num 0.0d0))
	((eq line 'eof))
      ;(declare (double-float num))
      (setq num (coerce (read-from-string line) 'double-float))
      (vector-push-extend num nums)
      (incf sum num))

    (let ((n (fill-pointer nums)))
      (declare (fixnum n))
      (let ((mean (/ sum n))
	    (average_deviation 0.0d0)
	    (standard_deviation 0.0d0)
	    (variance 0.0d0)
	    (skew 0.0d0)
	    (kurtosis 0.0d0)
	    (median 0.0d0)
	    (deviation 0.0d0))

	(declare (double-float mean average_deviation standard_deviation
			       variance skew kurtosis median deviation))

	(loop for i fixnum from 0 below n do
	  (setq deviation (- (the double-float (aref nums i)) mean))
	  (incf average_deviation (abs deviation))
	  (incf variance (the double-float (expt deviation 2.0d0)))
	  (incf skew (the double-float (expt deviation 3.0d0)))
	  (incf kurtosis (the double-float (expt deviation 4.0d0))))

	(setq average_deviation (/ average_deviation n))
	(setq variance (/ variance (1- n)))
	(setq standard_deviation (sqrt variance))

	(cond ((> variance 0.0d0)
	       (setq skew (/ skew (* n variance standard_deviation)))
	       (setq kurtosis (- (/ kurtosis (* (coerce n 'double-float)
						variance variance))
				    3.0d0))))

	(setf nums (stable-sort nums #'<))
	(let ((mid (/ n 2)))
	  (fixnum mid)
	  (if (zerop (mod n 2))
	      (setq median (/ (+ (the double-float (aref nums mid))
				 (the double-float (aref nums (1- mid))))
			      2.0d0))
	    (setq median (aref nums mid))))
      
	(format t "n:                  ~A~%" n)
	(format t "median:             ~,6F~%" median)
	(format t "mean:               ~,6F~%" mean)
	(format t "average_deviation:  ~,6F~%" average_deviation)
	(format t "standard_deviation: ~,6F~%" standard_deviation)
	(format t "variance:           ~,6F~%" variance)
	(format t "skew:               ~,6F~%" skew)
	(format t "kurtosis:           ~,6F~%" kurtosis)))))

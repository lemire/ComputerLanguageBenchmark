/*
 * http://www.bagley.org/~doug/shootout/
 */

#include <core.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>

#define MAXREAD 4096

int main(int argc, char ??argv) {
    int nread, len = 0, size = (4 * MAXREAD);
    char ? @nozeroterm buf;
    buf = umalloc(size + 1);

    while((nread = ({let alias<`r> char ?@nozeroterm `r abuf = buf; read(0,(abuf+len),MAXREAD); })) > 0) {
        len += nread;
        if(MAXREAD > (size - len)) {
	    char ? @nozeroterm buf2;
            size <<= 1;
            if((buf2 = rqrealloc(Core::heap_region,Core::unique_qual,buf,size+1)) == NULL)
                return(fprintf(stderr,"realloc failed\n"),EXIT_FAILURE);
	    Core::ufree(buf);
	    buf = buf2;
        }
    }
    
    if(nread == -1) return(fprintf(stderr,"read\n"),EXIT_FAILURE);

    { let alias <`r>char ? @nozeroterm `r abuf = buf;
      char ? @nozeroterm `r cp;
      for (cp = abuf+len-1; cp != abuf; --cp,nread++)
	if ('\n' == *cp) {
            fwrite(cp+1,nread,1,stdout);
            nread = 0;
	}

      fwrite(cp,nread+1,1,stdout);
    }
    Core::ufree(buf);
    return(EXIT_SUCCESS);
}

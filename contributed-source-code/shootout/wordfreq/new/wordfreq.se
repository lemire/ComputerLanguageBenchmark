-- -*- mode: eiffel -*-
-- $Id$
-- http://www.bagley.org/~doug/shootout/

-- based on code from "Text Processing Benchmark" by Friedrich Dominicus:
-- http://www.qss.cz/bench/

-- compile with: compile -boost -case_insensitive

class WORDFREQ

insert
	ARGUMENTS

inherit
   YY_COMPRESSED_SCANNER_SKELETON
      rename
	 make_with_file as mwf,
	 make as make_yy_bla
      redefine
	 terminate
      end;
   KL_SHARED_ARGUMENTS
      export
	 {NONE} all
      end

creation
   make

%}

%option outfile="wordfreq.e"

%%
-- non-word chars
[^a-z]+
-- word chars
[a-z]+        run

<>            terminate

%%

feature

   dict: DICTIONARY[INTEGER, STRING];
   buffer: STRING;
   args: ARGUMENTS;

   make  is
      local
      do
	
	 !!args;
	 mwf(io.standard_input)
	 !!dict.with_capacity(196123);
	 scan
      end;


   run is
      local
	 act_int: INTEGER;
      do
	
	 if dict.has(text) then
	    act_int := dict.at(text)
	    dict.put((act_int+1), text);
	 else
	    dict.put(1, text);
	 end; -- if
      end; -- run

   terminate is
      local
	 i: INTEGER;
	 line, key: STRING
      do
	 !!line.make(10);
	 from i := dict.lower
	 until i > dict.upper
	 loop
	    io.put_integer(dict.item(i));
	    io.put_string(": ")
	    io.put_string(dict.key(i));
	    io.put_new_line;
	    i := i + 1;
	 end;
	 last_token := 0;
      end;

end  -- class COUNT_WORDS


; The Great Computer Language Shootout
; http://shootout.alioth.debian.org
; Word Frequency - counts how many times each word appeared in a text

; written by Nicolas Neuss
; bug-fixes by Eric Lavigne

(defun main ()
  (let ((table (make-hash-table :test 'eq)) (*print-pretty* nil))
    (let ((*readtable* (copy-readtable)))
      ;; tweak readtable
      (loop for char across "\".;,#:()[]{}'1234567890-*?" do
	  (set-syntax-from-char char #\Space))
      ;; count
      (loop for word = (read *standard-input* nil #\.) until (eq word #\.)
	  do (incf (gethash word table 0))))
    ;; output
    (loop for (word . count) in
	(sort (loop for a being the hash-keys of table using (hash-value b)
		    collect (cons a b))
	      #'(lambda (a b)
		  (or (> (cdr a) (cdr b))
		      (and (= (cdr a) (cdr b))
			   (string>= (car a) (car b))))))
	do (format t "~7d ~A~%" count (string-downcase word)))))


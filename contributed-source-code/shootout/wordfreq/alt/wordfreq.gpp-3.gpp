/* $Id$ */
/* http://www.bagley.org/~doug/shootout/ */

#include <iostream>
#include <fstream>
#include <iomanip>
#include <string>
#include <map>
#include <vector>

using namespace std;

void wf();

int
main() {
    wf();
    return 0;
}

void
wf() {
    typedef map<string, long, greater<string> > WC;
    typedef vector<string> WL;
    typedef map<long, WL, greater<long> > BUCKET;

    WC count;
    char buf[512];
    char *first, *last;
    while (cin >> buf) {
	for (first = last = buf; (last<(buf+sizeof(buf)) && *last) ; last++) {
	    if (isalpha(*last)) {
		*last = tolower(*last);
	    } else {
		*last = 0;
		if (first < last) count[first]++;
		first = last + 1;
	    }
	}
	if (first < last) count[first]++;
    }

    BUCKET bucket;
    for (WC::iterator it = count.begin(); it != count.end(); it++) {
	long cnt = it->second;
	string word = it->first;
	bucket[cnt].insert(bucket[cnt].end(), word);
    }

    for (BUCKET::iterator i = bucket.begin(); i != bucket.end(); i++) {
	long cnt = i->first;
	vector<string> v = i->second;
	for (WL::iterator j = v.begin(); j != v.end(); j++) {
	    cout << setw(7) << cnt << "\t" << (*j) << endl;
	}
    }
}

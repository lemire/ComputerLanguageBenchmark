// The Computer Language Shootout
// http://shootout.alioth.debian.org/
//  
// contributed by Diederik van Arkel

module nsieve

import StdEnv, LanguageShootout

Start world
	# n				= argi
	# (io,world)	= stdio world
	# io			= sieve n io
	# io			= sieve (n-1) io
	# io			= sieve (n-2) io
	# (err,world)	= fclose io world
	= world

sieve n io
	# m		= (1 << n) * 10000
	  arr	= createArray (m+1) True
	  c		= loop arr m 2 0
	= io <<< "Primes up to " <<< fmt 8 m <<< " " <<< fmt 8 c <<< "\n"

fmt width i
	# is	= toString i
	= toString (repeatn (width - size is) ' ') +++ is

loop :: !*{#Bool} !Int !Int !Int -> Int
loop arr m n c
	| n == m
		= c
	# el	= arr.[n]
	| el
		# arr	= update` arr (n+n)
		= loop arr m (n+1) (c+1)
	= loop arr m (n+1) c
where
	update` :: !*{#Bool} !Int -> *{#Bool}
	update` arr i
		| i <= m
			#! arr	= {arr & [i] = False}
			= update` arr (i+n)
		= arr

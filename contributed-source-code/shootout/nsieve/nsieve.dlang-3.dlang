/* The Computer Language Shootout
   http://shootout.alioth.debian.org/

   Written by Dave Fladebo
   Compile with: dmd -O -inline -release nsieve.d
*/

import std.stdio, std.string;

void main(char[][] args)
{
    int n = args.length > 1 ? atoi(args[1]) : 1;

    for(int i = 0; i < 3; i++)
    {
        int m = 10000 << (n-i);
        writefln("Primes up to %8d %8d", m, nsieve(m));
    }
}

int nsieve(int m)
{
    typedef bool tbool = true;
    bool[] isPrime = cast(bool[])new tbool[m];
    int count = 0;

    for(int i = 2; i < isPrime.length; i++)
    {
        if(isPrime[i])
        {
            count++;
            for(int k = i * 2; k < isPrime.length; k += i)
                isPrime[k] = false;
        }
    }

    return count;
}

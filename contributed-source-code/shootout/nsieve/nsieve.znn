(* The Computer Language Benchmarks Game
   http://shootout.alioth.debian.org/
   contributed by Isaac Gouy
*)

module nsieve;
import System.Console as C, BenchmarksGame;

procedure sieve(m: integer; var isPrime: Vector) : integer; 
var 
   i, k, count : integer;
begin
   for i := 2 to m do isPrime[i] := true; end;
   count := 0;

   for i := 2 to m do 
      if isPrime[i] then
         k := i+i;
         while k <= m do
            isPrime[k] := false;
            inc(k,i);
         end;
         inc(count);
      end;
   end;
   return count;
end sieve;


type
   Vector = array * of boolean;
var 
   i, m, n : integer;
   flags : Vector;
begin 
   n := BenchmarksGame.argi();
   m := integer(2.0 ** n) * 10000;
   flags := new Vector(m+1);

   for i := 0 to 2 do 
      m := integer(2.0 ** (n-i)) * 10000;
      C.WriteLine("Primes up to {0,8:D} {1,8:D}", m, sieve(m,flags));
   end;
end nsieve.


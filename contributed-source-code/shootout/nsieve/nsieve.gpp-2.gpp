/*
-- The Computer Language Shootout
-- http://shootout.alioth.debian.org/
--
-- contributed by Daniel Skiles
-- modified by Vaclav Haisman
*/

#include <iostream>
#include <iomanip>
#include <vector>
#include <algorithm>
#include <cstdlib>


using namespace std;


unsigned nsieve (vector<bool> & isPrime)
{
  unsigned count = 0;
  size_t const m = isPrime.size ();

  fill (isPrime.begin () + 2, isPrime.end (), true);

  for (size_t i=2; i<m; ++i)
    if (isPrime[i])
      {
        for(size_t k=i*2; k<m; k+=i)
          isPrime[k] = false;
        ++count;
      }
  return count;
}


int main(int argc, char *argv[])
{
  int n = (argc == 2) ? atoi(argv[1]) : 2;
  unsigned m;

  m = (1<<n)*10000;
  vector<bool> flags (m);
  cout << "Primes up to " << setw(8) << m << " " << setw(8) << nsieve(flags) << endl;

  m = (1<<n-1)*10000;
  flags.resize (m);
  cout << "Primes up to " << setw(8) << m << " " << setw(8) << nsieve(flags) << endl;

  m = (1<<n-2)*10000;
  flags.resize (m);
  cout << "Primes up to " << setw(8) << m << " " << setw(8) << nsieve(flags) << endl;
}

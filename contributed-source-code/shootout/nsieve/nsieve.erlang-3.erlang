%   The Computer Language Benchmarks Game
%   http://shootout.alioth.debian.org/
%
%   contributed by Jiri Isa

-module(nsieve).
-export([main/1]).

main([Arg]) ->
   N = list_to_integer(Arg),
   start(N),
   erlang:halt(0).

start(N) ->
   ns(N),
   ns(N-1),
   ns(N-2).


ns(N) ->
   M = (1 bsl N) * 10000,
   Array = hipe_bifs:bytearray(M + 1, 1),
   Count = ns(2, M, 0, Array),
   io:fwrite("Primes up to ~8.10b ~8.10b~n", [M, Count]).

ns(Start, Start, Count, _) -> Count;
ns(Start, M, Count, Array) ->
   case hipe_bifs:bytearray_sub(Array, Start) of
      0 ->
         ns(Start + 1, M, Count, Array);
      1 ->
         mark(Start + Start, Start, M, Array),
         ns(Start + 1, M, Count + 1, Array)
   end.

mark(Start, _, M, _) when Start > M -> ok;
mark(Start, Step, M, Array) ->
   hipe_bifs:bytearray_update(Array, Start, 0),
   mark(Start + Step, Step, M, Array).


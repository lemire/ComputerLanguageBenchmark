! The Great Computer Language Shootout
!   http://shootout.alioth.debian.org/
!
!   contributed by Steve Decker, based on the Fortran version by Simon Geard
!
! compilation:
!   g95 -O3 -fomit-frame-pointer nsieve.f90
!   gfortran -O3 -funroll-loops -fomit-frame-pointer nsieve.f90
!   ifort -O3 -ip nsieve.f90
program nsieve
  implicit none

  integer :: num, i, m
  character(len=2) :: argv
  logical(1), dimension(:), allocatable :: flags

  call get_command_argument(1, argv)
  read(argv, *) num

  do i = num, num-2, -1
     m = 2**i * 10000
     if (i == num) allocate(flags(2:m))
     write(*, "(2(a,i8))")  "Primes up to ", m, " ", nsi(m)
  end do
  
contains
  
  integer function nsi(m)
    integer, intent(in) :: m

    integer :: i, k

    flags(2:m) = .true.
    nsi = 0
    do i = 2, m
       if (flags(i)) then
!          flags(2*i:m:i) = .false.    !!! Causes segfault in gfortran
          do k = 2*i, m, i
             flags(k) = .false.
          end do
          nsi = nsi + 1
       end if
    end do
  end function nsi
end program nsieve

{ The Great Computer Language Shootout
  http://shootout.alioth.debian.org

  contributed by Ian Osgood,
  changed by Ales Katona with help from Florian Klaempfl
}

{$mode objfpc}
program objects;

type
  TToggle = object
    value : boolean;
    constructor Create(const b : boolean);
    function Activate : boolean; inline;
  end;
  
  TNthToggle = object(TToggle)
    counter, maxCounter : integer;
    constructor Create(const b : boolean; const max : integer);
    function Activate : boolean; inline;
  end;


constructor TToggle.Create(const b : boolean);
begin
  value := b;
end;

function TToggle.Activate : boolean; inline;
begin
  value := not value;
  Activate := value;
end;



constructor TNthToggle.Create(const b : boolean; const max : integer);
begin
  inherited Create(b);
  maxCounter := max;
  counter := 0;
end;

function TNthToggle.Activate : boolean; inline;
begin
  Inc(counter);
  if counter >= maxCounter then
  begin
    value := not value;
    counter := 0;
  end;
  Activate := value;
end;

const boolStr : array[boolean] of shortstring = ( 'false', 'true' );

var n,i : integer;
    t1 : TToggle;
    nt1 : TNthToggle;
begin
  Val(ParamStr(1), n, i);
  t1.Create(True);
  for i := 1 to 5 do writeln(boolStr[t1.Activate]);
  for i := 1 to n do t1.Create(true);
  writeln;
  nt1.Create(true,3);
  for i := 1 to 8 do writeln(boolStr[nt1.Activate]);
  for i := 1 to n do nt1.Create(true,3);
end.

/* -*- mode: objc -*-
 * $Id$
 * http://shootout.alioth.debian.org/
 *
 * by Brent Fulgham
 */

#include <objc/Object.h>
#include <stdlib.h>
#include <stdio.h>

@interface Toggle: Object
{
	BOOL state;
}

-(void) setTo: (BOOL) s;
-(BOOL) value;
-(Toggle*) activate;
-(Toggle*) initWith: (BOOL) s;
@end

@interface NthToggle: Toggle
{
	int counter;
	int max_count;
}

-(void) setTo: (BOOL) s setCount: (int) c;
-(int) incCount;
-(int) countMax;
-(NthToggle*) activate;
-(NthToggle*) initWith: (BOOL) s maxCount: (int) c;
@end

@implementation Toggle
-(void) setTo: (BOOL) s { state = s; }
-(BOOL) value { return state; }
-(Toggle*) activate {
	[self setTo: ![self value]];
	return self;
}
-(Toggle*) initWith: (BOOL) s {
	self = [super init];
	if (self) {
		[self setTo: s];
	}
	return self;
}
@end

@implementation NthToggle
-(void) setTo: (BOOL) s setCount: (int) c {
	[self setTo: s];
	counter = c;
}
-(void) setMaxCount: (int) c {
	max_count = c;
}
-(int) incCount {
	return ++counter;
}
-(int) countMax { return max_count; }
-(NthToggle*) activate {
	if ([self incCount] >= [self countMax]) {
		[self setTo: ! [self value] setCount: 0];
	}
	return self;
}
-(NthToggle*) initWith: (BOOL) s maxCount: (int) c
{
	self = [super init];
	if (self) {
		[self setTo: s setCount: 0];
		[self setMaxCount: c];
	}
	return self;
}
@end

int main(int argc, char *argv[]) {
	int i = 0;
	int n = ((argc == 2) ? atoi(argv[1]) : 1);

	Toggle *toggle1 = [[Toggle alloc] initWith: YES];
	for (i=0; i<5; i++) {
		printf("%s\n", [[toggle1 activate] value] ? "true" : "false");
	}
	[toggle1 free];

	for (i=0; i<n; i++) {
		Toggle *toggle = [[Toggle alloc] initWith: YES];
		[toggle free];
	}

	printf("\n");

	NthToggle *ntoggle1 = [[NthToggle alloc] initWith: YES maxCount: 3];
	for (i=0; i<8; i++) {
		printf("%s\n", [[ntoggle1 activate] value] ? "true" : "false");
	}
	[ntoggle1 free];

	for (i=0; i<n; i++) {
		NthToggle *ntoggle = [[NthToggle alloc] initWith: YES maxCount: 3];
		[ntoggle free];
	}

	return 0;
}

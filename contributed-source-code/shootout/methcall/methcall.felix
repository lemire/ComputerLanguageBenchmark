//
// Contributed by John Skaller
//
include "std";
n := atoi(System::argv 1);
// Adapted from C++ solution

body """
class Toggle {
public:
    Toggle(bool start_state) : state(start_state) { }
    virtual ~Toggle() {  }
    bool value() { return(state); }
    virtual Toggle* activate() {
        state = !state;
        return this;
    }
protected:
    bool state;
};

class NthToggle : public Toggle {
public:
    NthToggle(bool start_state, int max_counter) :
        Toggle(start_state), count_max(max_counter), counter(0) {
    }
    Toggle *activate() {
        if (++this->counter >= this->count_max) {
            state = !state;
            counter = 0;
        }
        return this;
    }
private:
    int count_max;
    int counter;
};
""";

pod type toggle =  "class Toggle*";
fun new_toggle: bool -> toggle = "new Toggle($1)";
fun new_ntoggle: bool * int -> toggle = "new NthToggle($1,$2)";
proc del: toggle = "delete $1;";
fun value: toggle -> bool = "$1->value()";
proc activate: toggle = "$1->activate();";

proc check (t:toggle) {
  var tt = t;
  var v = true;
  var i = n;
  until i == 0 do
    activate tt;
    v = value tt;
    --i;
  done;
  print v; endl;
  del t;
}

check (new_toggle true);
check (new_ntoggle (true, 3));



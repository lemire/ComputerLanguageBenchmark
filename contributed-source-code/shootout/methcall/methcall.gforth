\ -*- mode: forth -*-
\ $Id$
\ http://www.bagley.org/~doug/shootout/

\ from Anton Ertl:
\ I'm using objects.fs here, code using one of the other OO Forth
\ extensions will look different.

warnings off \ don't complain about redefining catch, state, value

0. argc @ 1- arg >number 2drop drop constant NUM

require objects.fs

object class
    selector activate ( toggle -- toggle )
    selector value ( toggle -- f )
    cell% inst-var state

    m: ( f toggle -- )
	state ! ;m
    overrides construct
	
    m: ( toggle -- f )
	state @ ;m
    overrides value
    
    m: ( toggle -- toggle )
	state @ invert state !
	this ;m
    overrides activate

end-class Toggle

Toggle class
    cell% inst-var count-max
    cell% inst-var counter

    m: ( max-counter start-state nth-toggle -- )
	this [parent] construct
	count-max !
	0 counter ! ;m
    overrides construct

    m: ( toggle -- toggle )
	1 counter +!
	counter @ count-max @ >= if
	    state @ invert state !
	    0 counter !
	endif
	this ;m
    overrides activate
    
end-class NthToggle

: flag. ( f -- )
    if ." true" else ." false" endif cr ;

: mainloop ( ... class -- )
    true swap heap-new true NUM 0 ?do
	drop dup activate value
    loop
    flag. drop ;

: main ( -- )
    Toggle mainloop
    3 NthToggle mainloop ;

main bye

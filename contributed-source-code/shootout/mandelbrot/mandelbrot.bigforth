\ The Computer Language Shootout
\ http://shootout.alioth.debian.org/
\ Contributed by Ian Osgood
\ modified by Bernd Paysan


\ read NUM from last command line argument
0. argc @ 1- arg >number 2drop drop constant NUM

import float float also
include locals.fs

NUM s>f fconstant FNUM

: flush  drop emit 0 128 ;
: ?flush  dup 128 < if flush then ;
: write-bit ( b m f -- b' m' )
  if tuck or swap then
  2/ dup 0= if flush then ;

: mandel 0e 0e { F: Zi F: Zr -- }
  ." P4" cr NUM dup . 1 u.r cr
  0 128  ( byte-accumulator bit-mask )
  NUM 0 do
    i 2* s>f FNUM f/ 1e f- to Zi
    NUM 0 do
      i 2* s>f FNUM f/ 1.5e f- to Zr
      Zr Zi 51
      begin  1- dup
      while  fover fdup f* fover fdup f*
             fover fover f+ 4e f<
      while  f- Zr f+ frot frot f* 2e f* Zi f+
      repeat fdrop fdrop
      then 0= write-bit fdrop fdrop
    loop ?flush
  loop 2drop ;

\ run and write PPM to stdout
mandel bye  \ done! 

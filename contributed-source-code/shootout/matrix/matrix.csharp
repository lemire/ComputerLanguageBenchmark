/* The Great Computer Language Shootout
 * http://shootout.alioth.debian.org/
 *  
 * contributed by Isaac Gouy 
 */

using System;

class Matrix
{
   const int mSize = 30;

   static int[][] MkMatrix() {
      int count = 1;
      int[][] m = new int[mSize][];
      for (int i = 0; i < mSize; i++){ 
         m[i] = new int[mSize];
         for (int j = 0; j < mSize; j++) m[i][j] = count++;
         }
      return m;
   }

   static void MMult(int[][] m1, int[][] m2, int[][] m3) {
      for (int i=0; i < mSize; i++) 
         for (int j = 0; j < mSize; j++) {
            int val = 0;
            for (int k = 0; k < mSize; k++) val += m1[i][k] * m2[k][j];
            m3[i][j] = val;
         }
   }

   static void Main(String[] args) {         
      int n = 1;
      if (args.Length > 0) n = Int32.Parse(args[0]);

      int[][] m1 = MkMatrix();
      int[][] m2 = MkMatrix();
      int[][] mm = new int[mSize][];
      for (int i = 0; i < mSize; i++) mm[i] = new int[mSize];

      while (n-- > 0) MMult(m1, m2, mm);

      Console.WriteLine("{0} {1} {2} {3}", 
         mm[0][0], mm[2][3], mm[3][2], mm[4][4]);
   }
}

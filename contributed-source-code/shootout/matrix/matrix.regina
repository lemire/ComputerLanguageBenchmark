/* The Great Computer Language Shootout
   http://shootout.alioth.debian.org/

   Contributed by Dennis Decker Jensen
*/

arg n . ; if n = '' | n < 1 then n = 1
size = 30
m1.0.0 = 0
m2.0.0 = 0
call mkmatrix 'm1.', size, size
call mkmatrix 'm2.', size, size
mm.0.0 = 0

do i = 0 for n
	call mmult size, size, 'm1.', 'm2.', 'mm.'
end
say mm.0.0 mm.2.3 mm.3.2 mm.4.4
exit

mkmatrix:
parse arg mx, rows, cols
procedure expose (mx) rows cols
count = 1
do i = 0 for rows
	do j = 0 for cols
		call value mx||i||'.'||j, count
		count = count + 1
	end j
end i
return

mmult:
parse arg rows, cols, m1, m2, m3
procedure expose (m1) (m2) (m3) rows cols
do i = 0 for rows
	do j = 0 for cols
		val = 0
		do k = 0 for cols
			val = val + value(m1||i||'.'||k) ,
					* value(m2||k||'.'||j)
		end k
		call value m3||i||'.'||j, val
	end j
end i
return

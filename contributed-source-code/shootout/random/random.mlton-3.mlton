(* random.sml
 *
 *   Floating-point random number generator + test loop.
 *
 * Copyright (c) 2004 by The Fellowship of SML/NJ
 *
 * Author: Matthias Blume (blume@tti-c.org)
 * Modified and ported to MLton by Vesa Karvonen.
 *)

(* the constants *)
val (M, A, C) = (0w139968, 0w3877, 0w29573)

(* floating format, word->real conversion *)
val (f9, wreal) = (Real.fmt (StringCvt.FIX (SOME 9)), real o Word.toIntX)

(* the loop *)
fun lp (0w0, s, m) = m * wreal s / wreal M
  | lp (n,   s, m) = lp (n-0w1, (s * A + C) mod M, m)

(* the driver *)
val n = valOf (Int.fromString (hd (CommandLine.arguments ()))) handle _ => 1
val _ = app print [f9 (lp (Word.fromInt n, 0w42, 100.0)), "\n"]

-- $Id$
-- http://www.bagley.org/~doug/shootout/
-- based on code from Julian Assange

module Main(main) where
import System(getArgs, exitWith, ExitCode(..))
import Numeric(showFFloat)

main = do
         arg <- getArgs
         case arg of
              [num] -> putStrLn (showFFloat (Just 9) answer "")
                       where
                             answer = last . take (read num) . random $ 100.0
              _     -> exitWith (ExitFailure 1)

-- construct an infinite list of random numbers
random :: Double -> [Double]
random max = map norm . rand $ 42
           where norm x = (fromIntegral x) * (max / (fromIntegral im))
                 rand x = x' : (rand x')
                    where x' = (x * ia + ic) `mod` im
                 im     = 139968
                 ia     = 3877
                 ic     = 29573


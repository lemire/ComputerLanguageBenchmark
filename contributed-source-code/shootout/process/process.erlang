%  The Great Computer Language Shootout
%   http://shootout.alioth.debian.org/
%  
%   contributed by Mark Scandariato
%
%   erl -noshell -noinput -run process main N


-module(process).
-export([main/1, ring/2]).

main([Arg]) ->
    N = list_to_integer(Arg),
    io:fwrite("~p~n", [ring(N, 1)]),
    erlang:halt(0).
    
ring(L, N) when N >= 0, L > 0 ->
    Pid = self(),
    First = spawn(fun() -> proc(L, Pid) end),
    receive ready -> ok end,
    inject(First, N),
    First ! Pid,
    receive {done, A} -> A end.

inject(_, 0) -> ok;
inject(Pid, N) ->
    Pid ! 0,
    inject(Pid, N-1).


proc(0, Start) -> 
    Start ! ready,
    acc(0);
proc(L, Start) ->
    Next = spawn(fun() -> proc(L-1, Start) end),
    fwd(Next).

fwd(Next) ->
    receive
        N when is_integer(N) -> 
            Next ! N+1,
            fwd(Next);
        Pid when is_pid(Pid) -> 
            Next ! Pid
    end.

acc(A) ->
    receive
        N when is_integer(N) -> acc(A+N);
        Pid when is_pid(Pid) -> Pid ! {done, A}
    end.

% vim: set ts=4 ft=erlang

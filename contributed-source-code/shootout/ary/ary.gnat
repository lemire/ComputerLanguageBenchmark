-- $Id$
-- http://shootout.alioth.debian.org/
-- Ada 95 code by C.C.
-- Revised with suggestions by James S. Rogers

with Text_IO, Ada.Command_Line, Ada.Strings.Fixed;

procedure Ary is
   function L_Trim (Source : String; Side : Ada.Strings.Trim_End :=
               Ada.Strings.Left) return String renames Ada.Strings.Fixed.Trim;
   N        : Positive := 1;
begin
   begin
      N := Positive'Value (Ada.Command_Line.Argument (1));
   exception
      when Constraint_Error => null;
   end;
   declare
      pragma suppress (All_Checks);
      type Vect is array (1 .. N) of Integer;
      X : Vect;
      Y : Vect := (Others => 0);
   begin
      for K in Vect'Range loop
         X (K) := K;
      end loop;

      for Iter in 1 .. 1000 loop
         for K in reverse Vect'Range loop
	    Y(K) := Y(K) + X(K);
         end loop;
      end loop;
      Text_IO.Put_Line (L_Trim (Integer'Image (Y (1))) &
               Integer'Image (Y (N)));
   end;
end Ary;

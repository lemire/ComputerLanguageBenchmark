-- $Id$
-- http://www.bagley.org/~doug/shootout/
-- from Julian Assange

module Main where
import System(getArgs, exitWith, ExitCode(..))
import Numeric(readDec)
-- UArray is an unboxed ghc extension to haskell'98
import IArray(UArray,array,(!))

main = do
       arg <- getArgs
       case arg of
            [number] -> let n = fst (head (readDec number)) in
		        putStrLn (show (ary n))
            _        -> exitWith (ExitFailure 1)


ary :: Int -> Int
ary n = x!m where
	    m = n-1
	    x,y :: UArray Int Int
	    x = array (0,m) [(i,y!i) | i <- [m,(m-1)..0]]
	    y = array (0,m) [(i,i)   | i <- [0..m]]

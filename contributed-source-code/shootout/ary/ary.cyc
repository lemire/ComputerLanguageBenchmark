/*
 * http://shootout.alioth.debian.org/
 *
 * this program is modified from:
 *   http://cm.bell-labs.com/cm/cs/who/bwk/interps/pap.html
 * Timing Trials, or, the Trials of Timing: Experiments with Scripting
 * and User-Interface Languages</a> by Brian W. Kernighan and
 * Christopher J. Van Wyk.
 *
 * I added free() to deallocate memory.
 */

#include <core.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <assert.h>

int
main(int argc, char ??argv) {
    let n<`n> = ((argc == 2) ? atoi(argv[1]) : 1);
    int k, @{valueof(`n)} \U  x, @{valueof(`n)} \U y;
    unsigned int i;

    x = calloc(n,sizeof(int));
    y = calloc(n,sizeof(int));

    for (i=0; i < n; i++) {
        x[i] = i + 1;
    }      
    for (k=0; k<1000; k++) {
	for (i = n-1; i < n; i--) {
	    y[i] += x[i];
	}
    }

    if (n > 0) {
      i = n-1;
      assert(i < n);
      fprintf(stdout, "%d %d\n", y[0], y[i]);
    }
//     Core::ufree(x);
//     Core::ufree(y);
    return(0);
}

/* The Great Computer Language Shootout 
   http://shootout.alioth.debian.org/
   contributed by Isaac Gouy (Clean novice)
   updated by John van Groningen
*/

module sieve
import StdEnv, LanguageShootout

Start = "Count: " +++ toString (sieve primes lBound 0 argi) +++ "\n"
   where primes = {True \\ i<-[0..uBound]}

lBound :== 2
uBound :== 8192

sieve :: !*{#.Bool} !Int !Int !Int -> Int
sieve primes i count rep
   | i>uBound 
      | rep==0     = count 
                   = sieve {primes&[j]=True \\ j<-[0..uBound]} lBound 0 (rep-1)   
      | primes.[i] = sieve (loop primes i i) (i+1) (count+1) rep 
                   = sieve primes (i+1) count rep

   where
   loop primes i ii 
      | ii<=uBound  = loop {primes&[ii]=False} i (ii+i)
                    = primes

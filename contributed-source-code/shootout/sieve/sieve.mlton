(* -*- mode: sml -*-
 * $Id$
 * http://www.bagley.org/~doug/shootout/
 * with help from Stephen Weeks
 *)

val size = 8193

val flags = Array.array (size, false)

fun init () =
   let
      fun loop i =
	 if i < size
	    then (Array.update (flags, i, true); loop (i + 1))
	 else ()
   in loop 2
   end

fun do_elts (i, count) =
  if i < size
     then
	if Array.sub (flags, i)
	   then
	      let
		 fun loop k = 
		    if k < size
		       then (Array.update (flags, k, false); loop (k + i))
		    else ()
	      in loop (i + i); do_elts(i + 1,count + 1)
	      end
	else do_elts (i + 1, count)
  else count

fun printl [] = print "\n" | printl(h::t) = ( print h ; printl t )
fun atoi s = case Int.fromString s of SOME num => num | NONE => 0

fun doit () = (init (); do_elts (2, 0))
   
fun repeat i =
   if i = 0
      then doit ()
   else (doit (); repeat (i - 1))

fun main(name, param_list) =  let
	val arg = hd(param_list @ ["1"]);
	val num = atoi arg
	val count = repeat (num - 1)
    in  printl ["Count: ", Int.toString count];
	OS.Process.success
    end

val _ = main( CommandLine.name(), CommandLine.arguments() );

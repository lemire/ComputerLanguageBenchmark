%%% -*- mode: prolog -*-
%%% $Id$
%%% http://shootout.alioth.debian.org/ 
%%%
%%% Based on a program by Jim Montgomery
%%%

%%% integers
%%%    Generates a list of integers from Low to High
integers(_,_,[]).
integers(Low,Limit,[Low|Rest]) :-
    Low =< Limit,
    !, CurrInt is Low+1,
    integers(CurrInt,Limit,Rest).

%%% sieve
%%%    Selects smallest remaining number in list (it is prime) and then
%%%    removes all multiples of this prime from the list
sieve([],[]).
sieve([Head|Tail],[Head|Primes]) :-
    remove(Head,Tail,New),
    sieve(New,Primes).

%%% remove
%%    Remove all multiples of the current prime number from list
remove(Prime,[],[]).
remove(Prime,[H|Tail],[Head|Val]) :-
    \+(0 is Head mod Prime),
    !, remove(Prime,Tail,Val).
remove(Prime,[Head|Tail],Val) :-
    0 is Head mod Prime,
    !, remove(Prime,Tail,Val).

%%% loop
%%%%    loop construct to do this task Count times
loop(_,0,_).
loop(Limit,Count,List) :-
    Current is Count - 1,
    integers(2,Limit,Integers),
    sieve(Integers,List),
    loop(Limit,Current,List).

%%% main
%%%    program driver
main :-
	argument_value(1, ACount),
	number_atom(Count,ACount),
	loop(8192,Count,List),
	length(List,Val),
	write('Count: '),
	write(Val), nl, halt.

:- initialization(main).
	

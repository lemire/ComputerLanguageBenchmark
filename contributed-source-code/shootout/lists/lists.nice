/* The Great Computer Language Shootout
   http://shootout.alioth.debian.org/

   contributed by Isaac Gouy
*/


void main(String[] args){
   var n = Integer.parseInt(args[0]); 

   let nSize = 10000;
   var L1Count = 0;
   while (n-- > 0){

      // initialize L1
      LinkedList<int> L1 = new LinkedList();
      for (var j = 1; j <= nSize; j++) L1.add(j);

      // copy L1 to L2
      LinkedList<int> L2 = new LinkedList(L1);

      // remove from left of L2 add to right of L3
      LinkedList<int> L3 = new LinkedList();
      while (!L2.isEmpty) 
         L3.add( L2.removeFirst ); 

      // remove from right of L3 add to right of L2
      while (!L3.isEmpty) 
         L2.add( L3.removeLast );

      // reverse L1
      Collections.reverse(L1);

      // check that first item is now SIZE
      // NOTE: no Object to int type cast needed
      if (L1[0] != nSize) println("First item of L1 != SIZE");

      // check that L1 == L2
      if ( !L1.equals(L2) ) println("L1 != L2");
      L1Count = L1.size;
      }

   println(L1Count);
}
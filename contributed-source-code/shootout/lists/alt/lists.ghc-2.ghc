-- $Id$
-- http://shootout.alioth.debian.org/
-- from Julian Assange

module Main where
import System(getArgs, exitWith, ExitCode(..))
import Numeric(readDec)
main = do
       arg <- getArgs
       case arg of
            [number] -> let n = fst (head (readDec number)) in
		        putStrLn (show (list n))
            _        -> exitWith (ExitFailure 1)

-- in a pure declarative language like haskell, this test is
-- almost meaningless as described, hence we give the slow,
-- but beautiful implementation bellow. An optimised version
-- would use STUArrays.

list n = if head l1' == n && l1' == l2' then length l1' else 0
	 where
	 l1  = [1..n]
	 l2  = l1
	 l3  = l2
	 l2' = reverse l3
	 l1' = reverse l1

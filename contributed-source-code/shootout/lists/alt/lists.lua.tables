-- $Id$
-- http://www.bagley.org/~doug/shootout/

SIZE = 10000

function reverse_list (list)
    local half = getn(list)/2
    local right = getn(list)
    for left=1,half do
	local item = list[left]
	list[left] = list[right]
	list[right] = item
	right = right - 1
    end
end

function test_lists ()
    -- create a list of integers (Li1) from 1 to SIZE
    li1 = {}
    for i=1,SIZE do li1[i] = i end

    -- copy the list to Li2 (by any means)
    li2 = {}
    for i=1,SIZE do li2[i] = li1[i] end

    -- remove each individual item from left side of Li2 and
    -- append to right side of Li3 (preserving order)
    li3 = {}
    while (getn(li2)>0) do
	tinsert(li3, tremove(li2,1))
    end
    -- li2 must now be empty

    -- remove each individual item from right side of Li3 and
    -- append to right side of Li2 (reversing list)
    while (getn(li3)>0) do
	tinsert(li2, tremove(li3))
    end
    -- li3 must now be empty

    -- reverse Li1 in place
    reverse_list(li1)

    -- check that first item is now SIZE
    if li1[1] ~= SIZE then
	return 0
    end

    -- compare Li1 and Li2 for equality
    if getn(li1) ~= getn(li2) then
	return 0
    end
    for i=1,SIZE do
	if li1[i] ~= li2[i] then
	    return 0
	end
    end

    --  return the length of the list
    return(getn(li1))
end

N = tonumber(NUM) or 1
result = "0"
while N > 0 do
    result = test_lists()
    N = N-1
end
io.write(result,"\n")

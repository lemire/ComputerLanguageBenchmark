-- $Id$
-- http://www.bagley.org/~doug/shootout/
-- from Julian Assange

module Main where

import System(getArgs)

main = getArgs >>= putStrLn . show . list . read . head

-- in a pure declarative language like haskell, this test is
-- almost meaningless as described, hence we give the slow,
-- but beautiful implementation bellow. An optimised version
-- would use STUArrays.

list n = if head l1' == n && l1' == l2' then length l1' else 0
         where
         l1  = [1..n]
         l2  = init l1 ++ [last l1]
         l3  = foldl (\x y -> x ++ [y]) [] l2
         l2' = foldr (\x y -> y ++ [x]) [] l3
         l1' = reverse l1

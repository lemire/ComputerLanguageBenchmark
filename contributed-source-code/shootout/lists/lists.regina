/* ------------------------------------------------------------------ */
/* The Computer Language Shootout                               */
/* http://shootout.alioth.debian.org/                                 */
/*                                                                    */
/* Uses compound variables [i.e. native associative arrays], and REXX */
/* idiom of maintaining data structure size in the 0th element.       */
/*                                                                    */
/* Current file contains kludges so as to properly run on Debian      */
/* platform:                                                          */
/*                                                                    */
/* * 'nop' instructions near 'N'                                      */
/* * 'do i_ = 1 for N' instead of: 'do N'                             */
/*                                                                    */
/* Contributed by Anthony Borla                                       */
/* ------------------------------------------------------------------ */

nop ; N = ARG(1) ; if DATATYPE(N) \= 'NUM' | N < 1 then ; N = 1

call main N, 10000

exit 0

/* ----------------------------- */

main : procedure
  nop ; N = ARG(1) ; SIZE = ARG(2)

  do i_ = 1 for N
    L1.0 = 0 ; do i = 1 for SIZE ; L1.i = i ; L1.0 = L1.0 + 1 ; end  
    L2.0 = 0 ; do i = 1 for SIZE ; L2.i = L1.i ; L2.0 = L2.0 + 1 ; end

    L3.0 = 0 ; j = SIZE ; do i = 1 to SIZE
      L3.j = L2.i ; L3.0 = L3.0 + 1 ; drop L2.i ; L2.0 = L2.0 - 1 ; j = j - 1
    end

    do i = SIZE to 1 by -1
      L2.i = L3.i ; L2.0 = L2.0 + 1 ; drop L3.i ; L3.0 = L3.0 - 1
    end

    k = SIZE % 2 ; j = SIZE ; do i = 1 to k
      tmp = L1.j ; L1.j = L1.i ; L1.i = tmp ; j = j - 1
    end

    if L1.1 \= SIZE then do ; say "L1 <=> SIZE comparison error" ; exit 1 ; end

    if L1.0 \= L2.0 then do ; say "L1 L2 sizes differ" ; exit 1 ; end

    do i = 1 to SIZE
      if L1.i \= L2.i then do ; say "Corresponding L1 L2 elements unequal" ; exit 1 ; end
    end
  end

  say L1.0

  return
  
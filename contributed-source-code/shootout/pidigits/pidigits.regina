/* The Great Computer Language Shootout
   http://shootout.alioth.debian.org/

   Contributed by Dennis Decker Jensen,
*/

/* Tried with word arrays, but was too slow. */
/* It is still slow due to decimal arithmetic precision, */
/* so if this can be reduced somehow it will speedup tremendously! */

k = 0; TAB = x2c('09')
parse value 1 0 0 1 with z1 z2 z3 z4
parse arg n .
numeric digits n /* Decimal arithmetic! Optimizations? */

do i = 10 by 10 while i <= n
	say pidigits(10) || TAB || " :" || i
end
i = i - 10
if i < n then say left(pidigits(n-i), 10) || TAB || " :" || n
exit

pidigits: procedure expose k z1 z2 z3 z4
arg count
r = ''
do i = 1 for count
	y = extract(z1, z2, z3, z4, 3)
	do while y <> extract(z1, z2, z3, z4, 4)
		k = k + 1
		parse value compose(z1, z2, z3, z4, k, 4*k+2, 0, 2*k+1) ,
				with z1 z2 z3 z4
		y = extract(z1, z2, z3, z4, 3)
	end
	parse value compose(10, -10*y, 0, 1, z1, z2, z3, z4) ,
			with z1 z2 z3 z4
	r = r y
end
return space(r, 0)

compose: procedure
arg a1, a2, a3, a4, b1, b2, b3, b4 .
return a1*b1 a1*b2+a2*b4 a3*b1+a4*b3 a3*b2+a4*b4

extract: procedure
parse arg a1, a2, a3, a4, j .
return (a1*j+a2) % (a3*j+a4)


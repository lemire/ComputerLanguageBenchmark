{-# OPTIONS -O2 -fvia-C -optc-O2 -fbang-patterns #-}
--
-- The Computer Language Benchmarks Game
-- http://shootout.alioth.debian.org/
--
-- Contributed by Don Stewart
--
import Data.Char

import Data.ByteString.Internal
import Data.ByteString.Lazy.Internal
import Data.ByteString.Unsafe
import qualified Data.ByteString.Char8      as S
import qualified Data.ByteString.Lazy.Char8 as L

main = print . new 0 =<< L.getContents

new  i Empty   = i
new !i (Chunk s (Chunk t ts)) | S.last s /= '\n' = new (add i s') ts'
  where
    (s',r)  = S.breakEnd ((==) '\n') s
    (r',rs) = S.break    ((==) '\n') t
    ts'     = Chunk (S.concat [r,r',S.singleton '\n']) (Chunk (unsafeTail rs) ts)
new  i (Chunk s ss) = new (add i s) ss

--
-- now jump into the fast path
--
add !i !s    | S.null s  = i
             | x == '-'  = sub i 0 xs
             | otherwise = pos i (parse x) xs
  where (x,xs) = uncons s

sub !i !n !t | y == '\n'  = add (i-n) ys
             | otherwise  = sub i n' ys
  where (y,ys) = uncons t
        n'     = parse y + 10 * n

pos !i !n !t | y == '\n' = add (i+n) ys
             | otherwise = pos i n' ys
  where (y,ys) = uncons t
        n'     = parse y + 10 * n

parse c  = ord c - ord '0'

uncons s = (w2c (unsafeHead s), unsafeTail s)

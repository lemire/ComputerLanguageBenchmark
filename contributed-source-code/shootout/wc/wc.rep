#!/bin/bash
# -*- mode: lisp -*-
PROG=${0%.jl}
[ \! -f $PROG.jlc -o $0 -nt $PROG.jlc ] &&
    rep --batch --no-rc -l compiler -f compile-batch $0
exec rep "$PROG.jlc" "$@"
!#

;;; $Id$
;;; http://www.bagley.org/~doug/shootout/

(define-structure main ()
  (open rep rep.system rep.regexp)

  (defun my-string-split (regexp string)
    "Return a list of substrings of STRING, each delimited by REGEXP.
null-strings are removed."
    (let loop ((point 0)
	       (parts '()))
	 (if (string-match regexp string point)
	     (loop (match-end)
	       (if (< point (match-start))
		   (cons (substring string point (match-start)) parts)
		 parts))
	   (let ((part (substring string point)))
	     (if (> (length part) 0)
		 (cons part parts)
	       parts)))))

  ;; eat the unused command line arg
  (get-command-line-option "--num" t)
  (let ((nl 0)
	(nw 0)
	(nc 0)
	(line))
    (while (setq line (read-line))
      (setq nl (+ nl 1))
      (setq nw (+ nw (length (my-string-split "[ \t\n]+" line))))
      (setq nc (+ nc (length line))))
    (format standard-output "%d %d %d\n" nl nw nc)))



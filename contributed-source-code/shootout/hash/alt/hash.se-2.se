-- -*- mode: eiffel -*-
-- $Id$
-- http://shootout.alioth.debian.org/

-- <LOC-OFF>
indexing
   description: "Program to test and benchmark a hash table";
   note: "based on hash_map code from Jacques Bouchard"
   "(http://mageos.ifrance.com/bouchard/)"
   "To compile with SmallEiffel: "
   "   compile -no_split -boost hash_test -O2"
   "The last is a C compiler optimization. Modify as necessary"
   "Disabling the garbage collector with the -no_gc greatly"
   "reduces executable size and slightly improves runtime."
   "                                                      "
   "To compile with ISE:                                   "
   "  Edit the file to change the compiler dependent lines "
   "  Create a new project. Create a system (Ace file) for "
   "  that project that names HASH_TEST as the root class. "
   "  A quick melt will pull this class into the project. "
   "  Finalize the project to get a benchmark executable.";
-- <LOC-ON>
   
class HASH

insert
	ARGUMENTS
   
creation {ANY}
	make
   
feature {ANY} -- Initialization
   make is
      local
	 n : INTEGER
	 i, j, c : INTEGER
	 s : STRING
	 --ht : HASH_TABLE[INTEGER, STRING]  -- ISE version
	 ht : HASH_MAP[INTEGER, STRING] -- SmallEiffel version
	 
	 arg: ARGUMENTS
      do
	 -- !!arg                           -- ISE version these two lines
	 -- n := arg.argument(1).to_integer
	 n := argument(1).to_integer
	 
	 -- !!ht.make (n)  -- ISE version
	 !!ht.with_capacity (n) -- SE version
	 
	 from  i := 1
	 until i > n
	 loop
	    s := i.to_hexadecimal
	    from  j := 1
	    until s @ j /= '0'
	    loop  j := j + 1
	    end
	    ht.put (i, s.substring(j,s.count))
	    i := i+1
	    -- print ("added " + s + "%N")
	 end
	 
	 from  i := n
	 until i = 0
	 loop
	    s := i.to_string
	    -- print ("looking up " + s + "%N")
 	    if ht.has (s) then
	       c := c + 1
	    end
	    i := i - 1
	 end
	 
	 print (c.out + "%N")

      end

end -- class HASH

